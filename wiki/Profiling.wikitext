<languages/>
<translate>

== Description == <!--T:1-->

<!--T:2-->
Profiling the code of FreeCAD helps find bottlenecks in the algorithms used to create or manipulate objects.

<!--T:3-->
To profile [[Python|Python]] code use the standard {{incode|cProfile}} module to define start and end points to profile in the code.
</translate>
{{Code|code=
import cProfile
pr = cProfile.Profile()
pr.enable()

# --------------------------------------
# Lines of code that you want to profile
# --------------------------------------

pr.disable()
pr.dump_stats("/tmp/profile.cprof")
}}
<translate>

<!--T:4-->
Then install and use {{incode|pyprof2calltree}} to convert the profile output into cachegrind input.
</translate>
{{Code|code=
pyprof2calltree -i /tmp/profile.cprof -o /tmp/callgrind.out
}}
<translate>

<!--T:5-->
Then visualize this information with {{incode|kcachegrind}} for Linux or {{incode|qcachegrind}} for Windows.
</translate>
{{Code|code=
kcachegrind /tmp/callgrind.out
}}
<translate>

== Resources == <!--T:6-->

<!--T:7-->
* [https://docs.python.org/3/library/profile.html The Python profilers], {{incode|cProfile}} and {{incode|python}}.
* [https://pypi.org/project/pyprof2calltree/ pyprof2calltree] at PyPI; [https://github.com/pwaller/pyprof2calltree/ pyprof2calltree] repository.
* [https://forum.freecadweb.org/viewtopic.php?f=10&t=44785 FreeCAD's Python profiling tutorial].

</translate>
{{Powerdocnavi{{#translation:}}}}
[[Category:Developer Documentation{{#translation:}}]]
[[Category:Python Code{{#translation:}}]]
{{clear}}