<languages/>

{{Docnav/de
|[[Extra_python_modules/de|Zusätzliche Python-Module]]
|[[Contributors/de|Mitwirkende]]
}}

{{TOCright}}

<span id="Overview"></span>
==Übersicht==

Der FreeCAD-Quellcode enthält Kommentare, die ermöglichen, die Dokumentation der Programmierung automatisch mit [[Doxygen/de|Doxygen]], einem beliebten Quellcode-Dokumentationssystem, zu erstellen. Doxygen kann sowohl die C++ als auch die Python-Anteile von FreeCAD dokumentieren; als Ergebnis werden HTML-Seiten erstellt, mit Hyperlinks zu allen dokumentierten Funktionen und Klassen.

Die Dokumentation steht online auf der Website der [https://freecad.github.io/SourceDoc/ FreeCAD-API] zur Verfügung. Bitte beachten, dass diese Dokumentation möglicherweise nicht immer auf dem neuesten Stand ist. Werden weitere Einzelheiten benötigt, kann der aktuellste FreeCAD-Quellcode heruntergeladen und die Dokumentation selbst erstellt werden. Wenn sich dringende Fragen zum Code ergeben, können diese im Entwicklerbereich des [https://forum.freecad.org/index.php FreeCAD-Forums] gestellt werden.

Das Kompilieren der API-Dokumentation folgt den gleichen allgemeinen Schritten wie das Kompilieren der ausführbaren FreeCAD-Datei, wie auf der Seite [[Compile_on_Linux/Unix/de|Kompilieren unter Linux]] angegeben.

[[File:FreeCAD_documentation_compilation_workflow.svg|800px]]

{{Caption|Allgemeiner Arbeitsablauf zum Erstellen der Dokumentation der Programmierung von FreeCAD. Die Pakete Doxygen und Graphviz müssen sich im System befinden, ebenso wie der FreeCAD-Quellcode selbst. CMake konfiguriert das System so, dass mit einer einzigen make-Anweisung die Dokumentation für das gesamte Projekt in viele HTML-Dateien mit Diagrammen übersetzt wird.}}

<span id="Build_source_documentation"></span>
== Quelldokumentation erstellen ==

<span id="Complete_documentation"></span>
=== Komplette Dokumentation ===

Ist Doxygen installiert, ist es sehr einfach, die Dokumentation zu erstellen. Wird auch [https://www.graphviz.org/ Graphviz] installiert, können auch Diagramme erstellt werden, die die Beziehungen zwischen verschiedenen Klassen und Bibliotheken im FreeCAD-Code darstellen. Graphviz wird auch von FreeCADs [[Std_DependencyGraph/de|Abhängigkeitsdiagramm]] verwendet, um die Beziehungen zwischen verschiedenen Objekten anzuzeigen.

{{Code|code=
sudo apt install doxygen graphviz
}}

Dann den gleichen Schritten folgen, die beim Kompilieren von FreeCAD durchzuführen wären, die auf der Seite [[Compile_on_Linux/de|Kompilieren unter Linux]] beschrieben, und hier aus Gründen der Übersichtlichkeit zusammengefasst sind.
* Den Quellcode von FreeCAD laden und in ein eigenes Verzeichnis {{incode|freecad-source}} ablegen.
* Ein weiteres Verzeichnis {{incode|freecad-build}} erstellen, in dem FreeCAD und seine Dokumentation zusammengestellt wird.
* Die Quellen mit {{incode|cmake}} konfigurieren und dabei sicherstellen, dass das Quellverzeichnis und die erforderlichen Optionen für diese Zusammenstellung angegeben werden.
* Das Erstellen der Dokumentation mit {{incode|make}} auslösen.

{{Code|code=
git clone https://github.com/FreeCAD/FreeCAD.git freecad-source
mkdir freecad-build
cd freecad-build
cmake -DBUILD_QT5=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 ../freecad-source
}}

Ins Build-Verzeichnis wechseln und die folgende Anweisung ausgeben, um nur die Dokumentation zu erstellen.

{{Code|code=
make -j$(nproc --ignore=2) DevDoc
}}

Wie unter [[Compiling (Speeding up)/de|Kompilieren (Beschleunigen)]] erwähnt, legt die Option {{incode|-j}} die Anzahl der CPU-Kerne fest, die für das Kompilieren verwendet werden. Die resultierenden Dokumentationsdateien erscheinen in dem Verzeichnis

{{Code|code=
freecad-build/doc/SourceDocu/html/
}}

Der Einstiegspunkt in die Dokumentation ist die Datei {{incode|index.html}}, die mit einem Webbrowser geöffnet werden kann:

{{Code|code=
xdg-open freecad-build/doc/SourceDocu/html/index.html
}}

Das {{incode|DevDoc}} Ziel erzeugt eine beträchtliche Datenmenge, etwa 5 GB neue Dateien, insbesondere aufgrund der von Graphviz erstellten Diagramme.

<span id="Reduced_documentation"></span>
=== Gekürzte Dokumentation ===

Die komplette Dokumentation belegt etwa 3 GB Plattenplatz. Eine alternative, kleinere Version der Dokumentation, die nur ca. 600 MB benötigt, kann mit einem anderen Ziel erstellt werden. Dies ist die Version, die auf der [https://freecad.github.io/SourceDoc/ FreeCAD API Webseite] angezeigt wird.

{{Code|code=
make -j$(nproc --ignore=2) WebDoc
}}

The documentation on the [https://freecad.github.io/SourceDoc/ FreeCAD API website] is produced automatically from https://github.com/FreeCAD/SourceDoc. Anyone can rebuild it and submit a pull request:

* Fork the repo at https://github.com/FreeCAD/SourceDoc
* on your machine: clone the FreeCAD code (if you haven't yet), create a build dir for the doc, and clone the above SourceDoc repo inside. That SourceDoc will be updated when you rebuild the doc, and you'll be able to commit & push the results afterwards:

{{Code|code=
git clone https://github.com/FreeCAD/FreeCAD
cd FreeCAD
mkdir build
cd build
mkdir -p doc/SourceDocu/html
cd doc/SourceDocu/html
git clone your-fork-url
cd ../../..
cmake -DBUILD_QT5=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 ..
make WebDoc
cd doc/SourceDocu/html
git commit
git push
}}

* Go to your fork online, and create a pull request.

<span id="Other_versions"></span>
<div class="mw-translate-fuzzy">
== Andere Versionen ==
[https://iesensor.com/FreeCADDoc/0.19/ FreeCAD 0.19 development] Dokumentation erstellt von [https://forum.freecad.org/viewtopic.php?t=12613 qingfeng.xia].
</div>

[https://iesensor.com/FreeCADDoc/0.19/ FreeCAD 0.19 development] documentation built by [https://forum.freecad.org/viewtopic.php?t=12613 qingfeng.xia].

<span id="Integrate_Coin3D_documentation"></span>
== Coin3D Dokumentation integrieren ==

Auf Unix Systemen ist es möglich, die Coin3D Quelldokumentation mit der von FreeCAD zu verknüpfen. Dies ermöglicht eine einfachere Navigation und vollständige Vererbungsdiagramme für Coin abgeleitete Klassen.

*Installiere das {{incode|libcoin-doc}}, {{incode|libcoin80-doc}}, oder ein ähnlich benanntes Paket.
*Entpacke das Archiv {{incode|coin.tar.gz}}, das sich in {{incode|/usr/share/doc/libcoin-doc/html}} befindet; die Dateien sind möglicherweise bereits auf deinem System entpackt.
*Erzeuge die Quelldokumentation erneut.

Wenn du das Dokumentationspaket für Coin nicht installierst, werden die Verknüpfungen generiert, um auf die Online Dokumentation unter [https://coin3d.bitbucket.io/Coin/ BitBucket] zuzugreifen. Dies geschieht, wenn eine Doxygen Kennzeichendatei zur Konfigurationszeit mit {{incode|wget}} heruntergeladen werden kann.

<span id="Using_Doxygen"></span>
== Doxygen Anwenden ==

Auf der Seite [[Doxygen/de|Doxygen]] findest du eine ausführliche Erklärung, wie man C++- und Python Quellcode kommentiert, damit er von Doxygen zur automatischen Erstellung der Dokumentation verarbeitet werden kann.

Im Wesentlichen muss vor jeder Klassen- oder Funktionsdefinition ein Kommentarblock, beginnend mit {{incode|/**}} oder {{incode|///}} für C++ oder {{incode|##}} für Python, erscheinen, damit er von Doxygen aufgenommen wird. Viele [[Doxygen#Doxygen markup/de|Spezielle Befehle]], die mit {{incode|\}} oder {{incode|@}} beginnen, können verwendet werden, um Teile des Codes zu definieren und die Ausgabe zu formatieren. Auch [[Doxygen#Markdown support/de|Markdown Syntax]] wird innerhalb des Kommentarblocks verstanden, was es bequem macht, bestimmte Teile der Dokumentation hervorzuheben.

{{Code|code=
/**
 * Returns the name of the workbench object.
 */
std::string name() const;

/**
 * Set the name to the workbench object.
 */
void setName(const std::string&);

/// remove the added TaskWatcher
void removeTaskWatcher(void);
}}


{{Docnav/de
|[[Extra_python_modules/de|Zusätzliche Python-Module]]
|[[Contributors/de|Mitwirkende]]
}}

{{Userdocnavi{{#translation:}}}}
[[Category:Developer Documentation{{#translation:}}]]
{{clear}}