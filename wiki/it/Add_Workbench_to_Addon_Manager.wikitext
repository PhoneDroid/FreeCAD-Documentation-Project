<languages/>
{{TOCright}}

<span id="Introduction"></span>
== Introduzione ==

Le seguenti sono istruzioni dettagliate su come aggiungere un ambiente di lavoro Python all'[[Std_AddonMgr/it|Addon Manager]].

Requisiti:
* Un repository git locale.
* Un repository git remoto. Gli host git supportati sono [https://github.com GitHub], [https://about.gitlab.com/ GitLab], [https://framagit.org/public/projects Framagit] e [https://salsa.debian.org/public Debian Salsa].
* Git deve essere installato.

<span id="Enable_developer_mode"></span>
== Abilitare la modalità sviluppatore ==

# Aprire l'[[Preferences_Editor|editor delle preferenze]]: selezionare l'opzione {{MenuCommand|Modifica → [[Image:Std_DlgPreferences.svg|16px]] Preferenze...}} dal menu.
# Selezionare l'opzione {{MenuCommand|[[Image:Std_AddonMgr.svg|16px]] Addon Manager}} nella barra di sinistra.
# Nella scheda {{MenuCommand|Opzioni di Addon Manager}} selezionare la casella di controllo {{MenuCommand|Modalità sviluppatore Addon}}. Ciò abiliterà il pulsante {{Button|Strumenti di sviluppo...}} in Addon manager.
# Premere il pulsante {{Button|OK}} per chiudere l'editor delle preferenze.

<span id="Create_the_package.xml_file"></span>
== Creare il file package.xml ==

# Aprire [[Std_AddonMgr/it|Addon Manager]]: selezionare l'opzione {{MenuCommand|Strumenti → [[Image:Std_AddonMgr.svg|16px]] Addon manager}} dal menu.
# Premere il pulsante {{Button|Strumenti di sviluppo...}}.
# Si apre la finestra di dialogo {{MenuCommand|Estensioni strumenti per sviluppatori}}.<br>[[Image:Addon_Manager_Addon_Developer_Tools_Dialog.png|350px]]
# Inserire quanto segue:
#* {{MenuCommand|Percorso per l'estensione}}: Il percorso del repository Git locale.
#* {{MenuCommand|Nome dell'estensione}}: Questo apparirà negli elenchi di Addon Manager.
#* {{MenuCommand|Descrizione}}: Idem.
#* {{MenuCommand|Versione}}: Idem.
#* {{MenuCommand|URL del repository}}
#* {{MenuCommand|Ramo primario}}
#* {{MenuCommand|URL del README}}: Consigliato.
#* {{MenuCommand|Icona}}: L'icona deve far parte del repository.
# Premere il pulsante {{Button|[[Image:List-add.svg|16px]]}} nella parte inferiore della finestra di dialogo.
# Si apre la finestra di dialogo {{MenuCommand|Contenuto dell'estensione}}.<br>[[Image:Addon_Manager_Content_Item_Dialog.png|350px]]
# Il {{MenuCommand|Tipo del contenuto}} deve essere impostato su {{Value|Workbench}}.
# Selezionare la casella di controllo {{MenuCommand|Questo è l'unico elemento nel componente aggiuntivo}}.
# Inserire il {{MenuCommand|Nome della classe del Workbench}}. Questo è il nome della classe specificato nel file {{FileName|InitGui.py}}.
# In {{MenuCommand|Sottodirectory}} inserire {{Value|./}}.
# Premere il pulsante {{Button|OK}} per chiudere la finestra di dialogo.
# Premere il pulsante {{Button|Salva}} per chiudere la finestra di dialogo {{MenuCommand|Estensioni strumenti per sviluppatori}} e salvare il file {{FileName|package.xml}}.
# Premere il pulsante {{Button|[[Image:Process-stop.svg|16px]] Chiudi}} per chiudere Gestione componenti aggiuntivi.
# Inviare il file creato al proprio repository remoto.

<span id="Add_the_workbench_to_the_.gitmodules_file"></span>
== Aggiungere l'ambiente al file the .gitmodules ==

# Creare un fork di https://github.com/FreeCAD/FreeCAD-addons.
# Creare un nuovo branch.
# Modificare il file {{FileName|.gitmodules}} per includere il tuo nuovo componente aggiuntivo, in ordine alfabetico.
# Inviare il nuovo branch a GitHub.
# Inviare una richiesta pull al repository di FreeCAD-Addons con il nuovo file {{FileName|.gitmodules}}.

<span id="See_also"></span>
== Vedere anche ==

* [[Workbench_creation/it|Creare un Ambiente di lavoro]]
* [[Package_Metadata/it|Pacchetto Metadata]]: Informazioni dettagliate sul file {{FileName|package.xml}}.


[[Category:Addons{{#translation:}}]]
[[Category:Developer Documentation{{#translation:}}]]