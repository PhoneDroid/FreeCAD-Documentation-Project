<languages/>
{{TOCright}}

<span id="Background_history"></span>
== Storia ==

Il Drawing Exchange Format (DXF) è un formato di dati CAD proprietario sviluppato da Autodesk per consentire lo scambio di file tra il prodotto di punta AutoCAD e altri software. Esistono numerose buone librerie software per leggere/scrivere il formato DXF.

Esistono molte versioni del formato DXF. Si sentirà parlare di alcune versioni chiave, come R12 (del 1992) o R14 (del 1997 che aveva le spline). Le versioni successive di DXF hanno elementi 3D, ma questi vengono utilizzati o implementati raramente. Il modo in cui si utilizza DXF per condividere i dati CAD tra programmi dipende principalmente dalle limitazioni e dai bug nei corrispondenti lettori/importatori e scrittori/esportatori. Questi raramente sono completamente documentati e possono essere una grande fonte di frustrazione.

Se si sta modificando dei file DXF e si desidera che rimangano quasi gli stessi quando vengono salvati, consigliamo di utilizzare [https://en.wikipedia.org/wiki/LibreCAD LibreCAD] o [https://en.wikipedia.org /wiki/QCad QCad] perché le strutture dati interne di questi programmi sono compatibili con gli oggetti nel file DXF.

In FreeCAD i lettori DXF devono tradurre la geometria (ad esempio una forma spline) dal file DXF nelle specifiche rappresentazioni interne dell'ambiente di lavoro.

<span id="Methods_for_importing_DXF_to_FreeCAD"></span>
== Metodi per importare i DXF in FreeCAD ==

Se avete intenzione di rivedere le impostazioni frequentemente, vi consigliamo di andare su Modifica → Preferenze → Import-Export → DXF e spuntare la casella "[] Mostra questa finestra di dialogo durante l'importazione e l'esportazione".

Maggiori informazioni si trovano sulle pagine [[Draft_DXF/it|Draft - File DXF]] e [[FreeCAD_and_DXF_Import/it|Importare i file DXF in FreeCAD]].

Se state utilizzando la geometria importata per creare forme 3D in Part Design, provate a [[Sketcher_ValidateSketch/it|Convalidare lo schizzo]] dopo aver importato il DXF in uno schizzo.

<span id="C++_DXF_importer"></span>
=== Importatote DXF C++ ===

Questa implementazione è un'implementazione veloce, ma ignora le funzioni che non riconosce, come le spline DXF. Inoltre, può importare la geometria in Draft solo come singole voci nell'albero del modello. Le geometrie possono avere i colori letti dal file se si attiva questa opzione. Per ulteriori informazioni, vedere [https://forum.freecadweb.org/viewtopic.php?f=3&t=32493 questo post nel  forum].

<span id="Python_DXF_importer"></span>
=== Importatore DXF Python ===

Questo importatore deve essere scaricato e installato prima di poter essere utilizzato. Usare l'opzione "[] Consenti a FreeCAD di scaricare e aggiornare automaticamente le librerie DXF".

Questo importatore ha più funzioni (come l'implementazione delle spline) e ha la possibilità di caricare le forme DXF nell'Ambiente Sketcher. Tuttavia, tenere presente che tutti gli elementi dello schizzo vengono visualizzati singolarmente una seconda volta nell'albero del modello, il che può creare confusione. È possibile eliminare tutti questi singoli oggetti e conservare il singolo schizzo (che appare come la seconda voce nell'elenco di nuovi elementi).

Sfortunatamente, l'Ambiente Sketcher non implementa i colori, quindi tutta la geometria appare sullo stesso livello, il che è un problema se il file contiene molte linee di costruzione. Una soluzione consiste nell'aprire il disegno in LibreCAD ed eliminare tutte le geometrie che non si desidera visualizzare prima di salvare un file che contiene esattamente la geometria che si desidera caricare.

<span id="Macros"></span>
===Macro===

Dare uno sguardo al forum di FreeCAD o alla [[Macros_recipes/it|Raccolta di macro]] per implementazioni alternative dell'importazione e della pulizia dei DXF man mano che si sviluppano.

<span id="Saving_DXF"></span>
== Salvare in DXF ==

Oltre alle opzioni di Modifica → Preferenze, l'ambiente [[TechDraw_Workbench/it|TechDraw]] può anche esportare le pagine di disegno in DXF usando la funzione [[TechDraw_ExportPageDXF/it|Esporta pagina in DXF]].


== DXF terms and definitions ==

=== Anonymous blocks ===

When discussing DXF files, several terms are used to describe blocks that are generated automatically by the CAD software rather than by the user. 

* '''Anonymous block''' (or '''"Asterisk" block'''): This is the technical term defined by the DXF standard. It refers to any block whose name begins with an asterisk ({{Incode|*}}). It is the overarching term.

* '''System block''': This term describes the ''purpose'' of most anonymous blocks. They are not typically created by a user directly. Instead, the CAD application (e.g., AutoCAD) generates them automatically to represent complex objects that are composed of simpler geometric entities, such as hatches and dimensions.

* '''Hidden block''': This term describes the typical ''behavior'' of anonymous blocks within a CAD program's user interface. Because they are system-generated and not meant for direct user manipulation, they are usually hidden from the list of blocks that a user can insert.

Essentially, "anonymous block" is the technical name, "system block" describes its function, and "hidden block" describes its typical user interface behavior. For practical purposes in the context of the FreeCAD DXF importer, they all refer to the same category of blocks.

==== Classes of anonymous blocks ====

Anonymous blocks are further categorized based on the character that follows the initial asterisk. This prefix indicates the block's specific purpose. The most common classes are:

* {{Incode|*D...}} (Dimensions): A block representing the graphical components of a dimension entity (lines, arrowheads, etc.).
* {{Incode|*X...}} (Hatches): A block representing the geometry that makes up a hatch pattern.
* {{Incode|*P...}} (Paper Space Layouts): A block that contains all the entities that exist on a specific paper space layout. The main model is typically in a block named {{Incode|*Model_Space}}, and individual layouts are named {{Incode|*Paper_Space}}, {{Incode|*Paper_Space0}}, {{Incode|*Paper_Space1}}, and so on.
* {{Incode|*U...}} (Dynamic Blocks): These are complex blocks used for AutoCAD's dynamic block functionality.
* {{Incode|*E...}}, {{Incode|*T...}}, etc.: Other prefixes exist for specialized objects like associative arrowheads and tables.

=== BLOCKs and INSERTs ===

==== The BLOCK entity ====

A {{Incode|BLOCK}} is a named collection of geometric entities (lines, arcs, polylines, etc.) that are grouped together to form a single object definition. It can be thought of as a template.

A {{Incode|BLOCK}}:
* '''Has a name:''' every user-created block has a unique name (e.g., "CHAIR-01", "BOLT-M8"). This name is used to reference the block.
* '''Has a base point:''' this is the origin point (0,0,0) within the block's own internal coordinate system. When the block is inserted, this base point is aligned with the specified insertion coordinates.
* '''Is not visible by itself:''' the {{Incode|BLOCK}} definition is stored in a library-like section of the DXF file (the {{Incode|BLOCKS}} section). The geometry within the block does not appear in the final drawing until an instance of it is created.

==== The INSERT entity ====

An {{Incode|INSERT}} entity is what places a copy, or instance, of a {{Incode|BLOCK}}'s geometry into the drawing's model space or paper space. It is a very lightweight entity because it does not contain the geometry itself; it only contains a reference to a {{Incode|BLOCK}} definition and instructions on how to place and transform it.

An {{Incode|INSERT}}:
* '''References a block by name:''' it specifies which {{Incode|BLOCK}} definition to use (e.g., "I am an instance of block 'CHAIR-01'").
* '''Has an insertion point:''' this is the (X, Y, Z) coordinate in the drawing where the block's base point should be placed.
* '''Has transformations:''' each instance can be transformed independently without affecting the original block definition. These transformations include:
** '''Scale:''' the instance can be scaled differently in the X, Y, and Z directions.
** '''Rotation:''' the instance can be rotated around its insertion point.

==== BLOCK placement strategies ====

A DXF file separates the '''definition''' of a component from its '''placement'''.

* A {{Incode|BLOCK}} is the template or blueprint. It contains the geometry that makes up a component, like a chair or a window. These definitions are stored in the {{Incode|BLOCKS}} section of the file and are not directly visible in the final drawing.
* An {{Incode|INSERT}} is the instruction to place a {{Incode|BLOCK}} into the drawing at a specific position, orientation, and scale. These are the visible instances of the block and are found in the {{Incode|ENTITIES}} section.

There are two primary workflows for using blocks and inserts:

# '''Template and instance workflow:''' A single {{Incode|BLOCK}} definition is created, and multiple {{Incode|INSERT}} entities are used to place instances of it throughout the drawing. This is an efficient method for handling repetitive elements. For instance, the geometry for a chair is defined once in a {{Incode|BLOCK}} and then referenced many times by {{Incode|INSERT}} entities.
# '''Compound object workflow:''' A {{Incode|BLOCK}} is created from existing geometry simply to group those objects together as a single, selectable unit. In this case, the {{Incode|BLOCK}} definition is used by a single {{Incode|INSERT}} entity only.

The DXF importer must be able to distinguish between these two use cases to correctly represent the original drawing's intent, either by creating many linked instances to a single base object (template model) or by creating a single, visible object (grouped object model).


{{Userdocnavi{{#translation:}}}}
[[Category:User Documentation{{#translation:}}]]
[[Category:Draft{{#translation:}}]]
[[Category:TechDraw{{#translation:}}]]
[[Category:File_Formats{{#translation:}}]]