<languages/>
{{TOCright}}

<span id="Background_history"></span>
==Tło historyczne==

Drawing Exchange Format ''(DXF)'' to zastrzeżony format danych CAD opracowany przez Autodesk w celu umożliwienia wymiany plików między ich flagowym produktem AutoCAD a innym oprogramowaniem. Istnieje wiele dobrych bibliotek oprogramowania do odczytu/zapisu formatu DXF.

Istnieje wiele wersji formatu DXF. Można usłyszeć o niektórych kluczowych wersjach, takich jak R12 ''(z 1992 r.)'' lub R14 ''(z 1997 r., która miała splajny)''. Późniejsze wersje DXF mają elementy 3D, ale są one rzadko używane lub wdrażane. Sposób wykorzystania DXF do udostępniania danych CAD między programami zależy głównie od ograniczeń i błędów w odpowiednich czytnikach / importerach i programach zapisujących / eksporterach. Rzadko są one w pełni udokumentowane i mogą być źródłem frustracji.

Jeśli edytujesz pliki DXF i chcesz, aby pozostały prawie takie same po ich zapisaniu, zalecamy użycie [https://en.wikipedia.org/wiki/LibreCAD LibreCAD] lub [https://en.wikipedia.org/wiki/QCad QCad], ponieważ wewnętrzne struktury danych tych programów są kompatybilne z obiektami w pliku DXF.

W programie FreeCAD czytniki DXF muszą przetłumaczyć geometrię ''(np. kształty splajnu)'' z pliku DXF na określone wewnętrzne reprezentacje środowiska pracy.

<span id="Methods_for_importing_DXF_to_FreeCAD"></span>
==Metody importowania DXF==

Jeśli zamierzasz często sprawdzać ustawienia, zalecamy przejście do menu {{MenuCommand|Edycja → Preferencje ...→ Import-Eksport → DXF}} i zaznaczenie pola {{CheckBox|TRUE|}} Pokaż okno dialogowe podczas importowania i eksportowania.

Więcej informacji znajduje się na stronach [[Draft_DXF/pl|Rysunek Roboczy: DXF]] i [[FreeCAD_and_DXF_Import/pl|FreeCAD i import DXF]].

Jeśli zaimportowana geometria jest używana do tworzenia kształtów 3D w środowisku pracy Projekt Części, po zaimportowaniu pliku DXF do szkicu należy użyć opcji [[Sketcher_ValidateSketch/pl|Sprawdź poprawność szkicu]].

<span id="C++_DXF_importer"></span>
===Importer C++ DXF===

Ta implementacja jest szybka, ale pomija funkcje, których nie rozpoznaje, takie jak splajny DXF. Może również importować geometrię do środowiska pracy Rysunek Roboczy tylko jako pojedyncze wpisy w drzewie modelu. Kolory mogą być odczytywane z pliku po zaznaczeniu tej opcji. Aby uzyskać więcej informacji, zobacz [https://forum.freecadweb.org/viewtopic.php?f=3&t=32493 ten post na forum].

<span id="Python_DXF_importer"></span>
===Importer DXF w Pythonie===

Ten importer musi zostać pobrany i zainstalowany, zanim będzie można z niego korzystać. Użyj opcji {{CheckBox|TRUE|}} Pozwól programowi FreeCAD na automatyczne pobieranie i aktualizację bibliotek DXF.

Ten importer ma więcej funkcji ''(takich jak implementacja splajnów)'' i ma opcję ładowania kształtów DXF do środowiska pracy Szkicownik. Należy jednak pamiętać, że wszystkie elementy szkicu pojawią się pojedynczo po raz drugi w drzewie modelu, co może być mylące. Możesz usunąć wszystkie te pojedyncze obiekty i zachować pojedynczy szkic ''(który pojawi się jako drugi wpis na liście nowych elementów)''.

Niestety, Szkicownik nie implementuje kolorów, więc cała geometria pojawi się na tym samym poziomie, co stanowi problem, jeśli plik zawiera wiele linii konstrukcyjnych. Jednym z obejść jest otwarcie rysunku w LibreCAD i usunięcie całej geometrii, której nie chcesz wyświetlać, przed zapisaniem pliku zawierającego dokładnie tę geometrię, którą chcesz załadować.

<span id="Macros"></span>
===Makrodefinicje===

Miej oko na forum FreeCAD lub [[Macros_recipes/pl|Przepisy na makropolecenia]] na alternatywne implementacje importowania i czyszczenia DXF w miarę ich rozwoju.

<span id="Saving_DXF"></span>
==Zapis DXF==

Oprócz opcji w menu {{MenuCommand|Edycja → Preferencje ...}}, środowisko pracy [[TechDraw_Workbench/pl|Rysunek Techniczny]] może również eksportować strony rysunku do DXF za pomocą funkcji [[TechDraw_ExportPageDXF/pl|Eksport strony do DXF]].


<span id="DXF_terms_and_definitions"></span>
== DXF - pojęcia i definicje ==

<span id="Anonymous_blocks"></span>
=== Anonimowe bloki ===

Przy omawianiu plików DXF, używanych jest kilka określeń do opisu bloków, które są generowane automatycznie przez oprogramowanie CAD a nie przez użytkownika. 

* '''Anonimowy blok''' (lub '''Blok "Asterisk"'''): To techniczne określenie zdefiniowane przez standard DXF. Odnosi się do każdego bloku, którego nazwa zaczyna się od gwiazdki ({{Incode|*}}). To nadrzędne określenie.

* '''System block''': This term describes the ''purpose'' of most anonymous blocks. They are not typically created by a user directly. Instead, the CAD application (e.g., AutoCAD) generates them automatically to represent complex objects that are composed of simpler geometric entities, such as hatches and dimensions.

* '''Hidden block''': This term describes the typical ''behavior'' of anonymous blocks within a CAD program's user interface. Because they are system-generated and not meant for direct user manipulation, they are usually hidden from the list of blocks that a user can insert.

Essentially, "anonymous block" is the technical name, "system block" describes its function, and "hidden block" describes its typical user interface behavior. For practical purposes in the context of the FreeCAD DXF importer, they all refer to the same category of blocks.

==== Classes of anonymous blocks ====

Anonymous blocks are further categorized based on the character that follows the initial asterisk. This prefix indicates the block's specific purpose. The most common classes are:

* {{Incode|*D...}} (Dimensions): A block representing the graphical components of a dimension entity (lines, arrowheads, etc.).
* {{Incode|*X...}} (Hatches): A block representing the geometry that makes up a hatch pattern.
* {{Incode|*P...}} (Paper Space Layouts): A block that contains all the entities that exist on a specific paper space layout. The main model is typically in a block named {{Incode|*Model_Space}}, and individual layouts are named {{Incode|*Paper_Space}}, {{Incode|*Paper_Space0}}, {{Incode|*Paper_Space1}}, and so on.
* {{Incode|*U...}} (Dynamic Blocks): These are complex blocks used for AutoCAD's dynamic block functionality.
* {{Incode|*E...}}, {{Incode|*T...}}, etc.: Other prefixes exist for specialized objects like associative arrowheads and tables.

=== BLOCKs and INSERTs ===

==== The BLOCK entity ====

A {{Incode|BLOCK}} is a named collection of geometric entities (lines, arcs, polylines, etc.) that are grouped together to form a single object definition. It can be thought of as a template.

A {{Incode|BLOCK}}:
* '''Has a name:''' every user-created block has a unique name (e.g., "CHAIR-01", "BOLT-M8"). This name is used to reference the block.
* '''Has a base point:''' this is the origin point (0,0,0) within the block's own internal coordinate system. When the block is inserted, this base point is aligned with the specified insertion coordinates.
* '''Is not visible by itself:''' the {{Incode|BLOCK}} definition is stored in a library-like section of the DXF file (the {{Incode|BLOCKS}} section). The geometry within the block does not appear in the final drawing until an instance of it is created.

==== The INSERT entity ====

An {{Incode|INSERT}} entity is what places a copy, or instance, of a {{Incode|BLOCK}}'s geometry into the drawing's model space or paper space. It is a very lightweight entity because it does not contain the geometry itself; it only contains a reference to a {{Incode|BLOCK}} definition and instructions on how to place and transform it.

An {{Incode|INSERT}}:
* '''References a block by name:''' it specifies which {{Incode|BLOCK}} definition to use (e.g., "I am an instance of block 'CHAIR-01'").
* '''Has an insertion point:''' this is the (X, Y, Z) coordinate in the drawing where the block's base point should be placed.
* '''Has transformations:''' each instance can be transformed independently without affecting the original block definition. These transformations include:
** '''Scale:''' the instance can be scaled differently in the X, Y, and Z directions.
** '''Rotation:''' the instance can be rotated around its insertion point.


{{Userdocnavi{{#translation:}}}}
[[Category:User Documentation{{#translation:}}]]
[[Category:Draft{{#translation:}}]]
[[Category:TechDraw{{#translation:}}]]
[[Category:File_Formats{{#translation:}}]]