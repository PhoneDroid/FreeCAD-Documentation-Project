<languages/>

<span id="Description"></span>
==Opis==

[[PythonOCC/pl|PythonOCC]] jest projektem, który ma na celu dostarczenie całej gamy funkcji OpenCASCADE Technology ''(OCCT)'' poprzez moduł [[Python/pl|Python]] {{incode|OCC}}. Stanowi to zupełnie inne podejście niżwe FreeCAD, gdzie tylko niektóre komponenty OCCT są eksponowane poprzez środowisko pracy [[Part_Workbench/pl|Część]].

PythonOCC, z kolei, ze względu na to, że zapewnia dostęp do wszystkich klas i funkcji OCCT, jest bardzo złożony, ale również bardzo potężny. Dlatego też jest to bardzo dobry dodatek do FreeCAD. Dlatego, gdy jesteś ograniczony funkcjonalnością OCCT FreeCAD, używanie {{incode|OCC}} jest dobrą alternatywą.

<span id="Usage"></span>
==Użycie==

Obecnie w środowisku pracy [[Part_Workbench/pl|Część]] mamy metody {{incode|Part.__toPythonOCC__()}} i {{incode|Part.__fromPythonOCC__()}} do wymiany {{incode|TopoDS_Shape}} ([[Part_TopoShape/pl|Część: Kształt topologiczny]]) podmiotów do i z PythonOCC. Metody te pozwalają nam na wykorzystanie pełnej mocy OCCT w środowisku Python, a następnie ponowne umieszczenie powstałych kształtów w obiektach FreeCAD.

PythonOCC jest wewnętrznie używany przez przeglądarkę [[Arch_IFC|IFC]] dołączoną do bibliotek [[IfcOpenShell|IfcOpenShell]]. IfcOpenShell jest używany do odczytu i zapisu dokumentów [[Arch_IFC/pl|IFC]] przy użyciu FreeCAD, poprzez Środowiska pracy [[Arch_Workbench/pl|Arch]] i [[BIM_Workbench/pl|BIM]]. PythonOCC jest potrzebny tylko do uruchomienia zintegrowanej przeglądarki IfcOpenShell, w innym przypadku w ogóle nie jest wykorzystywany przez FreeCAD.

<span id="Installation"></span>
==Instalacja==

PythonOCC musi być skompilowany ze źródła. W tym celu musisz pobrać odpowiednie pliki programistyczne dla technologii [[OpenCASCADE|OpenCASCADE Technology]] ''(OCCT)'' i SWIG. Starsza wersja PythonOCC miała obejmować OCE 0.18, społeczną edycję OCCT 6.9.x, która obecnie nie jest utrzymywana. Najnowsza wersja PythonOCC jest teraz przeznaczona do współpracy z najnowszą, oficjalną wersją OCCT 7.4.

Wraz z OCCT 7.4, PythonOCC wymaga stosunkowo najnowszych zależności takich jak Python 3.7, CMake 3.12 i SWIG 3.0.11. Python 2 nie jest już obsługiwany.

Wraz z OCCT 7.4, PythonOCC wymaga stosunkowo najnowszych zależności takich jak: Python 3.7, CMake 3.12 i SWIG 3.0.11. Python 2 nie jest już obsługiwany.

Możliwe jest również zainstalowanie prekompilowanych bibliotek PythonOCC przy użyciu Conda. Więcej informacji i instrukcji kompilacji można znaleźć w repozytorium projektu głównego, [https://github.com/tpaviot/pythonocc-core tpaviot/pythonocc-core].

<span id="Compilation"></span>
==Kompilacja==

Możesz także samodzielnie skompilować pythonOCC ''(zobacz [https://github.com/tpaviot/pythonocc-core/blob/master/INSTALL.md instrukcję])''. Poniżej znajduje się procedura dla Debiana/Ubuntu z użyciem pakietów opencascade dostarczonych przez distro:

<pre>
git clone git://github.com/tpaviot/pythonocc-core.git pythonocc
cd pythonocc
mkdir build
cd build
cmake -DOCE_INCLUDE_PATH=/usr/include/opencascade -DOCE_LIB_PATH=/usr/lib/x86_64-linux-gnu ..
make
</pre>

<span id="More_information"></span>
==Informacje dodatkowe==

* Strona projektu: [http://www.pythonocc.org/ pythonocc.org]
* Nowsza wersja kompatybilna z OCCT 7.4, [https://github.com/tpaviot/pythonocc-core tpaviot/pythonocc-core].
* Starsza wersja zgodna z OCE 0.18, społecznym wydaniem OCCT 6.9.x, [https://github.com/tpaviot/pythonocc tpaviot/pythonocc].
* [https://forum.freecadweb.org/viewtopic.php?f=39&t=33254 IfcPlusPlus skompilowany na Gentoo - pytania i alternatywy?]

{{Powerdocnavi{{#translation:}}}}
[[Category:Developer Documentation{{#translation:}}]]
[[Category:Python Code{{#translation:}}]]
{{clear}}