<languages/>

{{Docnav/pl
|[[PySide/pl|PySide]]
|[[Dialog_creation/pl|Tworzenie dialogu]]
}}

{{TOCright}}

<span id="Introduction"></span>
==Wprowadzenie==

Zaawansowani użytkownicy mają możliwość [[Interface_creation/pl|tworzenia interfejsu]], aby pomóc wytwarzać złożone narzędzia dla ich niestandardowych [[Addon/pl|dodatków]], takie jak [[Macros/pl|makrodefinicje]] lub pełne [[Workbenches/pl|środowiska pracy]].

Interfejs jest tworzony przy użyciu biblioteki [[PySide/pl|PySide]], która umożliwia korzystanie z Qt w środowisku [[Python/pl|Python]].

[[File:FreeCAD_creating_interfaces.svg|600px]]
{{Caption|Dwie ogólne metody tworzenia interfejsów, poprzez włączenie interfejsu do pliku Python lub poprzez użycie plików {{incode|.ui}}.}}

<span id="Description"></span>
==Opis==

Istnieją zazwyczaj dwa sposoby tworzenia interfejsu za pomocą PySide.

<span id="Interface_in_a_.ui_file"></span>
===Interfejs w pliku .ui===

W tej metodzie interfejs jest zdefiniowany w pliku {{incode|.ui}} (dokument XML, który definiuje strukturę interfejsu), który jest następnie importowany do kodu [[Python/pl|Python]], który go używa. Jest to zalecane podejście.
* Pozwala programiście pracować z interfejsem graficznym oddzielnie od logiki, która będzie z niego korzystać.
* Pozwala to każdemu spojrzeć na sam interfejs, czyli plik {{incode|.ui}}, bez konieczności uruchamiania kodu Python.
* Plik {{incode|.ui}} może być zaprojektowany przez każdego bez wiedzy programistycznej.
* Interfejs {{incode|.ui}} może być używany w samodzielnym oknie ''(modalnym)'' lub w oknie osadzonym ''(niemodalnym)'', dlatego ta metoda jest idealna do tworzenia niestandardowych [[Task_panel/pl|paneli zadań]].
* Ponieważ plik {{incode|.ui}} opisuje tylko "wygląd" interfejsu, nie musi być powiązany z konkretnym językiem programowania; może być używany zarówno w [[Python/pl|Python]], jak i w kodzie C++.

<span id="Interface_completely_in_Python_code"></span>
===Interfejs w całości w kodzie Python===

W tej metodzie cały interfejs jest definiowany przez kilka wywołań środowiska Python.
* Jest to starszy sposób pracy z interfejsem.
* Metoda ta tworzy bardzo rozwlekły kod, ponieważ wiele szczegółów interfejsu musi zostać określonych ręcznie.
* Nie jest łatwo oddzielić interfejs od logiki, która używa tego kodu, co oznacza, że użytkownik musiałby uruchomić plik [[Python/pl|Python]] w odpowiednim kontekście, aby zobaczyć, jak wyglądałby interfejs.
* Ta metoda ma tę zaletę, że kilka interfejsów może być zawartych w jednym dokumencie, kosztem tego, że plik jest bardzo duży.
* Ta metoda jest zalecana tylko dla małych interfejsów, które nie definiują więcej niż kilka widżetów, na przykład w [[Macros/pl|makrodefinicjach]].

Przykłady tej metody można znaleźć w [[Interface_creation/pl#Interface_completely_in_Python_code|Tworzenie interfejsu całkowicie w kodzie Python]].


{{Docnav/pl
|[[PySide/pl|PySide]]
|[[Dialog_creation/pl|Tworzenie dialogu]]
}}

{{Powerdocnavi{{#translation:}}}}
[[Category:Developer Documentation{{#translation:}}]]
[[Category:Python Code{{#translation:}}]]