<languages/>

<span id="Description"></span>
==Opis==

Profilowanie kodu FreeCAD pomaga znaleźć wąskie gardła w algorytmach używanych do tworzenia lub manipulowania obiektami.

Do profilowania kodu [[Python/pl|Python]] należy użyć standardowego modułu {{incode|cProfile}}, aby zdefiniować punkty początkowe i końcowe do profilowania w kodzie.
{{Code|code=
import cProfile
pr = cProfile.Profile()
pr.enable()

# --------------------------------------
# Lines of code that you want to profile
# --------------------------------------

pr.disable()
pr.dump_stats("/tmp/profile.cprof")
}}

Następnie zainstaluj i użyj {{incode|pyprof2calltree}}, aby przekonwertować dane wyjściowe profilu na dane wejściowe cachegrind.
{{Code|code=
pyprof2calltree -i /tmp/profile.cprof -o /tmp/callgrind.out
}}

Następnie zwizualizuj te informacje za pomocą {{incode|kcachegrind}} dla systemu Linux lub {{incode|qcachegrind}} dla systemu Windows.
{{Code|code=
kcachegrind /tmp/callgrind.out
}}

<span id="Resources"></span>
==Zasoby==

* [https://docs.python.org/3/library/profile.html Profilery Python], {{incode|cProfile}} i {{incode|python}}.
* [https://pypi.org/project/pyprof2calltree/ pyprof2calltree] w PyPI; [https://github.com/pwaller/pyprof2calltree/ pyprof2calltree] repozytorium.
* [https://forum.freecadweb.org/viewtopic.php?f=10&t=44785 Poradnik profilowania FreeCAD w Python].

{{Powerdocnavi{{#translation:}}}}
[[Category:Developer Documentation{{#translation:}}]]
[[Category:Python Code{{#translation:}}]]
{{clear}}