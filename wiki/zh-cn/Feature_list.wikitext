<languages/>

{{Docnav
|[[About_FreeCAD|About FreeCAD]]
|[[Installing_on_Windows|Installing on Windows]]
}}

这是一个庞大的，未完成的，FreeCAD 特性列表。

{{TOCright}}

<span id="Release_notes"></span>
== 版本说明 ==

* [[Release_notes_1.1|版本 1.1]] - ''每周提供测试软件包的开发版本''
* '''[[Release_notes_1.0|版本 1.0]] - 2024-11'''
* [[Release_notes_0.21|版本 0.21]] - 2023-8
* [[Release_notes_0.20|版本 0.20]] - 2022-6
* [[Release_notes_0.19|版本 0.19]] - 2021-3
* [[Release_notes_0.18|版本 0.18]] - 2019-3
* [[Release_notes_0.17|版本 0.17]] - 2018-4
* [[Release_notes_0.16|版本 0.16]] - 2016-4
* [[Release_notes_0.15|版本 0.15]] - 2015-3
* [[Release_notes_0.14|版本 0.14]] - 2014-3
* [[Release_notes_0.13|版本 0.13]] - 2013-2
* [[Release_notes_0.12|版本 0.12]] - 2011-12
* [[Release_notes_0.11|版本 0.11]] - 2011-3

<span id="Key_features"></span>
== 关键特性 ==

<div class="mw-translate-fuzzy">
* [[Image:Feature1.jpg|left]] 一个完全基于 [http://en.wikipedia.org/wiki/Open_CASCADE Open CASCADE Technology] 的 '''几何内核 (geometry kernel)''' 允许在复杂的形状类型上执行复杂的 3D 操作，原生支持这些概念：多重曲面 (brep)、非均匀有理B样条 (nurbs curves) 和 曲面 (surfaces)，大量几何实体 (geometric entities)，布尔操作 (boolean operations) 和圆角 (fillets) 和内建支持 STEP 和 IGES 格式 {{clear}}
* [[Image:Feature3.jpg|left]] 一个全 '''参数化模型 (parametric model)'''。所有 FreeCAD 对象是本地原生参数化，意味着他们的形状能基于 [[Property/zh-cn|属性]] 变化 或者 甚至依赖于其它的对象，所有改变在需要时会被自动重新计算，而且由 撤消/重做 栈记录其操作。很容易增加新对象类型，甚至 [[Scripted objects|全部用 Python 进行编程]]{{clear}}
* [[Image:Feature4.jpg|left]] '''模块化设计''' 允许插件 (模块) 添加功能到核心应用程序中。那些扩展能跟用 C++ 编写整个新应用程度一样复杂或者跟 [[Power users hub|Python 脚本]] 一样简单 或者 自己录制 [[macros]]。你能从内建的 '''Python''' 解释器中完全访问从宏或者外部脚本到 FreeCAD 几乎任何部分，进行 [[Topological data scripting/zh-cn|几何对象创建或变换]], 展示几何对象 ([[scenegraph]]) 的 2D 或者 3D 图形甚至控制 [[PySide|FreeCAD 界面]] {{clear}}
* [[Image:Feature5.jpg|left]] 导入/导出到 '''标准格式'''，例如：[http://en.wikipedia.org/wiki/ISO_10303 STEP], [http://en.wikipedia.org/wiki/IGES IGES], [http://en.wikipedia.org/wiki/Obj OBJ], [http://en.wikipedia.org/wiki/STL_%28file_format%29 STL], [http://en.wikipedia.org/wiki/Dxf DXF], [http://en.wikipedia.org/wiki/Svg SVG], [http://en.wikipedia.org/wiki/STL_(file_format) STL], [http://en.wikipedia.org/wiki/COLLADA DAE], [http://en.wikipedia.org/wiki/Industry_Foundation_Classes IFC] or [http://people.sc.fsu.edu/~jburkardt/data/off/off.html OFF], [http://en.wikipedia.org/wiki/NASTRAN NASTRAN], [http://en.wikipedia.org/wiki/VRML VRML]，另外还有 FreeCAD 的原生 [[File_Format_FCStd/zh-cn|Fcstd 文件格式]]. FreeCAD 对每种文件格式的兼容性支持级别有所不同，因为它依赖于实现读写的模块。{{clear}}
* [[Image:Feature7.jpg|left]] 一个 [[Sketcher Workbench/zh-cn|素描器]] 和 约束求解程序，允许勾画几何约束的 2D 图形。目前素描器允许你构建几种几何约束对象，并且利用它们在整个 FreeCAD 中作为构建其它对象的基础。{{clear}}
* [[Image:Feature9.jpg|left]] 一个 [[Robot Workbench/zh-cn|机器人模拟]] 模块用于学习机器人移动行为。这个机器人模块已经有一个扩展的图像界面允许仅限界面的工作流程。{{clear}}
* [[Image:Feature8.jpg|left]] 一个 [[Drawing Workbench/zh-cn|绘制工作表]] 模块允许放置 3D 模型的 2D 视图到一张工作表上。此模块会产生可导出的 SVG 或 PDF 工作表。此模块虽然功能稀少，但此特性已经能增加一个强大的功能到 Python。
* [[Image:Feature-raytracing.jpg|left]] 一个 [[Raytracing Workbench/zh-cn|渲染]] 模块能导出 3D 对象用于外部渲染。当前仅支持 [http://en.wikipedia.org/wiki/POV-Ray povray] 和 [http://en.wikipedia.org/wiki/LuxRender LuxRender], 但期待未来支持其它的渲染器.{{clear}}
* [[Image:Feature-arch.jpg|left]] 一个 [[Arch Workbench/zh-cn|建筑学]] 模块支持类似[http://en.wikipedia.org/wiki/Building_Information_Modeling BIM] 工作流, 与 [http://en.wikipedia.org/wiki/Industry_Foundation_Classes IFC] 兼容.{{clear}}
* [[Image:Feature-CAM.jpg|left]] [[Path Workbench/zh-cn|路径模块]] 专注于机械机器类似 研磨机 (milling, CAM), 并能输出、显示和修改 [http://en.wikipedia.org/wiki/G-code G code].{{clear}}
</div>

<span id="General_features"></span>
== 一般特性 ==

*'''跨平台'''- FreeCAD 在 Windows、Linux 和 macOS 以及其他平台上的运行和表现完全一致.

* '''图形化界面''' - FreeCAD 基于[https://www.qt.io/ Qt] 框架的构建所有用户界面，并使用基于[http://en.wikipedia.org/wiki/Open_Inventor Open Inventor] 的 3D 查看器，可以快速渲染 3D 场景和易于理解的场景图形显示。

* '''可以作为命令行程序运行''' - 在命令行模式运行时，FreeCAD 没有界面，但拥有所有的几何工具。可以应用于一些需要更低内存占用的场景下，例如：作为服务器为其它应用程序生产内容。

* '''能作为[[Embedding FreeCAD/zh-cn|Python 模块]]引用''' -  FreeCAD 可以导入到其它能运行 Python 脚本的应用程序中或在 Python 控制台中。类似命令行模式，FreeCAD 的界面没有加载，但所有几何工具都可以使用。

* '''工作台理念'''：在 FreeCAD 界面里，工具由 [[Workbenches/zh-cn|工作台]] 进行分组。界面上仅显示与当前任务相关的工具组，保持工作区的整洁和响应速度，且应用程序可以更快加载。

* '''延迟加载 功能/数据类型 的 插件/模块 框架'''。FreeCAD 被分为核心应用程序与模块/工作区，模块仅在需要时才会被加载。几乎所有工具和几何类型均被存储在工作区中。工作区类似于插件，采用延迟加载模式，并且可以从 FreeCAD 中增加或删除。

<div class="mw-translate-fuzzy">
* '''参数关联的文档对象'''：FreeCAD 文档中的所有对象都可以使用参数定义。参数可以随时变动和计算。对象间的关系也会被存储，所以当修改一个对象时，也会同时修改所有依赖它的对象。
</div>

<div class="mw-translate-fuzzy">
* '''参数化原型创建''' (长方体、球体、 圆柱体、等等)
</div>

<div class="mw-translate-fuzzy">
* 图像 '''修改操作''' 在 3D 空间的任意平面进行类似变换、旋转、缩放、镜像、位移（萃取或者[https://www.researchgate.net/publication/240754626_Self-intersection_Removal_in_Triangular_Mesh_Offsetting Jung/Shin/Choi]）或者形状转换。
</div>

<div class="mw-translate-fuzzy">
* '''[http://en.wikipedia.org/wiki/Constructive_solid_geometry 布尔操作]''' (相并、相差、相交)
</div>

<div class="mw-translate-fuzzy">
* 在 3D 空间的任意平面创建 '''简单平面几何''' 图形，类似 线、曲线、矩形、弧形、圆形。
</div>

<div class="mw-translate-fuzzy">
* 直线和旋转建模 '''拉伸'''，'''截面''' 和 '''圆角'''。
</div>

<div class="mw-translate-fuzzy">
* 拓扑组件像 '''顶点, 边, 曲线''' 和 '''平面''' (通过 Python 脚本)。
</div>

<div class="mw-translate-fuzzy">
* '''测试和修复'''网格工具：可靠性测试，非流形测试，自相交测试，孔填充和统一方向。
</div>

<div class="mw-translate-fuzzy">
* '''注解''' 就像文字或者尺寸
</div>

<div class="mw-translate-fuzzy">
* '''撤消/重做 框架''': 任何事情都能被撤消/重做，在撤消栈中，多个步骤能被一次性撤消。
</div>

<div class="mw-translate-fuzzy">
* '''事务管理''': 撤消/重做栈存储文档事务而不是单一的行为，允许每个工具精确定义什么能被撤消或者重做。
</div>

<div class="mw-translate-fuzzy">
* '''内建[[Scripting/zh-cn|脚本]]框架''': FreeCAD 内建 [http://www.python.org/ Python] 脚本解释器和几乎覆盖整个应用程序，接口，几何和显示 3D 视图的 API。解释器可以单独运行复杂的脚本。实际上，整个模块都可以使用 Python 编程。
</div>

<div class="mw-translate-fuzzy">
* '''内建 Python 终端''' 语法高亮，自动补全，类浏览：Python 命令可以直接在 FreeCAD 中发出，并立即返回结果，允许脚本编写者快速测试功能，浏览其内容的模块，方便了解 FreeCAD 内部。
</div>

<div class="mw-translate-fuzzy">
* '''用户和终端交互''': 所有用户的 FreeCAD 的操作都执行了 python 代码。这些代码都可以在终端中打印出来和记录为宏。
</div>

<div class="mw-translate-fuzzy">
* '''完全的记录和编辑宏''': 当用户操作时发出 python 命令，这些命令都可以记录，编辑和保存。
</div>

<div class="mw-translate-fuzzy">
* '''(ZIP压缩的)文件保存格式''': FreeCAD 文档以 .[[File_Format_FCStd/zh-cn|fcstd]] 为扩展名，可以包含多种信息类型，如几何形状信息，脚本以及缩略图图标。这个 .fcstd 文件本身是 ZIP 文档，所以 FreeCAD 文件已经被压缩了。
</div>

<div class="mw-translate-fuzzy">
* '''完全个性化／脚本化的图形界面'''。基于 [http://www.qtsoftware.com Qt] 的 FreeCAD 的界面完全可以使用 Python 解释器调用。不但 FreeCAD 自己提供的 workbench 函数可以用 Python 调用，Qt 的界面部分也可以调用，例如创建，添加，修改，删除小工具和工具栏。
</div>

<div class="mw-translate-fuzzy">
* '''缩略图''' (当前仅 Linux 系统版本有): FreeCAD 文档的图标可以在大多数文档管理器中显示文档的缩略图，例如 Gnome 的 Nautilus。
</div>

<div class="mw-translate-fuzzy">
* '''MSI 安装器''' 可以方便 Windows 系统安装 FreeCAD。 Ubuntu 系统上的包也在维护中。
</div>

==Extra Workbenches ==

<div class="mw-translate-fuzzy">
==额外的工作台==
高级用户们已经创建了大量的自定义 [[external workbenches/zh-cn|外部工作台]].
</div>


<div class="mw-translate-fuzzy">
{{docnav|About FreeCAD/zh-cn|Install on Windows/zh-cn}}
</div>

{{Userdocnavi{{#translation:}}}}
[[Category:User Documentation{{#translation:}}]]