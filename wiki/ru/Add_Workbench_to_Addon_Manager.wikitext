<languages/>
{{TOCright}}

<span id="Introduction"></span>
== Вступление ==

<div class="mw-translate-fuzzy">
Данная страница содержит пошаговую инструкцию позволяющую добавить Python верстак в [[Std_AddonMgr/ru|Менеджер дополнений]].
</div>

Требуется:
* Наличие локального git репозитория.
* Наличие удаленного git репозитория. Поддерживаемые git хостинги: [https://github.com GitHub], [https://about.gitlab.com/ GitLab], [https://framagit.org/public/projects Framagit] и [https://salsa.debian.org/public Debian Salsa].
* Git должен быть установлен локально.

<span id="Enable_developer_mode"></span>
== Активация режима для разработчиков ==

# Откройте [[Preferences_Editor/ru|Редактор настроек]]: через пункт меню {{MenuCommand|Правка → [[Image:Std_DlgPreferences.svg|16px]] Настройки...}}.
# Выберите раздел {{MenuCommand|[[Image:Std_AddonMgr.svg|16px]] Менеджер дополнений}} в панели слева.
# На в кладке {{MenuCommand|Настройки менеджера дополнений}} включите флажок {{MenuCommand|Режим разработчика дополнений}}. Это сделает доступной кнопку {{Button|Инструменты разработчика...}} в Менеджере дополнений.
# Нажмите кнопку {{Button|OK}} для закрытия Редактора настроек.

<span id="Create_the_package.xml_file"></span>
== Создание package.xml файла ==

# Open the [[Std_AddonMgr|Addon Manager]]: select the {{MenuCommand|Tools → [[Image:Std_AddonMgr.svg|16px]] Addon manager}} option from the menu.
# Press the {{Button|Developer tools...}} button.
# The {{MenuCommand|Addon Developer Tools}} dialog opens.<br>[[Image:Addon_Manager_Addon_Developer_Tools_Dialog.png|350px]]
# Enter the following:
#* {{MenuCommand|Path to Addon}}: The path to the local git repository.
#* {{MenuCommand|Addon Name}}: This will appear in the listings of the Addon Manager.
#* {{MenuCommand|Description}}: Idem.
#* {{MenuCommand|Version}}: Idem.
#* {{MenuCommand|Repository URL}}
#* {{MenuCommand|Primary branch}}
#* {{MenuCommand|README URL}}: Recommended.
#* {{MenuCommand|Icon}}: The icon must be part of the repository.
# Press the {{Button|[[Image:List-add.svg|16px]]}} button at the bottom of the dialog.
# The {{MenuCommand|Content Item}} dialog opens.<br>[[Image:Addon_Manager_Content_Item_Dialog.png|350px]]
# The {{MenuCommand|Content type}} should be set to {{Value|Workbench}}.
# Check the {{MenuCommand|This is the only item in the Addon}} checkbox.
# Enter the {{MenuCommand|Workbench class name}}. This is the class name specified in the {{FileName|InitGui.py}} file.
# For the {{MenuCommand|Subdirectory}} enter {{Value|./}}.
# Press the {{Button|OK}} button to close the dialog.
# Press the {{Button|Save}} button to close the {{MenuCommand|Addon Developer Tools}} dialog and save the {{FileName|package.xml}} file.
# Press the {{Button|[[Image:Process-stop.svg|16px]] Close}} button to close the Addon Manager.
# Push the created file to your remote repository.

<span id="Add_the_workbench_to_the_.gitmodules_file"></span>
== Добавление верстака в .gitmodules файл ==

# Сделайте Fork https://github.com/FreeCAD/FreeCAD-addons репозитория.
# Создайте новую ветвь.
# Отредактируйте файл {{FileName|.gitmodules}}, добавьте в него ваше дополнение (Addon) в алфавитном порядке.
# Сделайте Push в новую ветку GitHub.
# Отправьте Pull Request с изменениями в FreeCAD-Addons репозиторий с измененным {{FileName|.gitmodules}} файлом.

<span id="See_also"></span>
== Смотрите также ==

* [[Workbench_creation|Workbench creation]]
* [[Package_Metadata|Package Metadata]]: Detailed information about the {{FileName|package.xml}} file.


[[Category:Addons{{#translation:}}]]
[[Category:Developer Documentation{{#translation:}}]]