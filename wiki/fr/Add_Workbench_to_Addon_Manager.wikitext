<languages/>
{{TOCright}}

== Introduction ==

Ces instructions expliquent, étape par étape, comment ajouter un atelier Python au [[Std_AddonMgr/fr|gestionnaire des extensions]].

Conditions requises :
* Un dépôt git local.
* Un dépôt git distant. Les hôtes git pris en charge sont [https://github.com GitHub], [https://about.gitlab.com/ GitLab], [https://framagit.org/public/projects Framagit] et [https://salsa.debian.org/public Debian Salsa].
* Git doit être installé.

<span id="Enable_developer_mode"></span>
== Activer le mode développeur ==

# Ouvrez l'[[Preferences_Editor/fr|Éditeur de préférences]] : sélectionnez l'option {{MenuCommand|Édition → [[Image:Std_DlgPreferences.svg|16px]] Préférences...}} dans le menu.
# Sélectionnez l'option {{MenuCommand|[[Image:Std_AddonMgr.svg|16px]] Gestionnaire des extensions}} dans la barre de gauche.
# Dans l'onglet {{MenuCommand|Options du gestionnaire des extensions}}, cochez la case {{MenuCommand|Activer le mode développeur des extensions}}. Cela activera le bouton {{Button|Outils du développeur...}} dans le gestionnaire des extensions.
# Appuyez sur le bouton {{Button|OK}} pour fermer l'éditeur de préférences.

<span id="Create_the_package.xml_file"></span>
== Créer le fichier package.xml ==

# Ouvrez le [[Std_AddonMgr/fr|Gestionnaire des extensions]] : sélectionnez l'option {{MenuCommand|Outils → [[Image:Std_AddonMgr.svg|16px]] Gestionnaire des extensions}} dans le menu.
# Appuyez sur le bouton {{Button|Outils du développeur...}}.
# La boîte de dialogue {{MenuCommand|Outils pour le développeur d'extensions}} s'ouvre.<br>[[Image:Addon_Manager_Addon_Developer_Tools_Dialog.png|350px]]
# Saisissez les éléments suivants :
#* {{MenuCommand|Chemin vers l'extension}} : chemin vers le dépôt git local.
#* {{MenuCommand|Nom de l’extension}} : ce nom apparaîtra dans les listes du gestionnaire des extensions.
#* {{MenuCommand|Description}} : idem.
#* {{MenuCommand|Version}} : idem.
#* {{MenuCommand|URL du dépôt}} : idem.
#* {{MenuCommand|Branche principale}} : idem.
#* {{MenuCommand|URL du README}} : recommandé.
#* {{MenuCommand|Icône}} : l'icône doit faire partie du dépôt.
# Appuyez sur le bouton {{Button|[[Image:List-add.svg|16px]]}} au bas de la boîte de dialogue.
# La boîte de dialogue {{MenuCommand|Élément de contenu}} s'ouvre.<br>[[Image:Addon_Manager_Content_Item_Dialog.png|350px]]
# Le {{MenuCommand|Type de contenu}} doit être défini sur {{Value|Atelier}}.
# Cochez la case {{MenuCommand|C'est le seul élément de l'extension}}.
# Saisissez le nom de la classe {{MenuCommand|Atelier}}. Il s'agit du nom de classe spécifié dans le fichier {{FileName|InitGui.py}}.
# Pour le {{MenuCommand|Sous-répertoire}}, entrez {{Value|./}}.
# Appuyez sur le bouton {{Button|OK}} pour fermer le dialogue.
# Appuyez sur le bouton {{Button|Enregistrer}} pour fermer la boîte de dialogue {{MenuCommand|Outils pour le développeur d'extensions}} et enregistrer le fichier {{FileName|package.xml}}.
# Appuyez sur le bouton {{Button|[[Image:Process-stop.svg|16px]] Fermer}} pour fermer le gestionnaire des extensions.
# Poussez le fichier créé vers votre dépôt distant.

<span id="Add_the_workbench_to_the_.gitmodules_file"></span>
== Ajouter l'atelier au fichier .gitmodules ==

# Faites un fork https://github.com/FreeCAD/FreeCAD-addons.
# Créez une nouvelle branche.
# Modifiez le fichier {{FileName|.gitmodules}} pour inclure votre nouvelle extension, par ordre alphabétique.
# Poussez la nouvelle branche vers GitHub.
# Soumettez une Pull Request au dépôt FreeCAD-Addons avec le nouveau fichier {{FileName|.gitmodules}}.

<span id="See_also"></span>
==Voir aussi==

* [[Workbench_creation/fr|Création d'atelier]]
* [[Package_Metadata|Métadonnées du package]] : informations détaillées sur le fichier {{FileName|package.xml}}.


[[Category:Addons{{#translation:}}]]
[[Category:Developer Documentation{{#translation:}}]]