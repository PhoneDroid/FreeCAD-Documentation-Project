<languages/>
{{TOCright}}

<span id="Background_history"></span>
== Historique ==

Le Drawing Exchange Format (DXF) est un format de données CAO propriétaire développé par Autodesk pour permettre l'échange de fichiers entre son produit phare AutoCAD et d'autres logiciels. Il existe un certain nombre de bonnes bibliothèques logicielles pour lire/écrire le format DXF.

Il existe de nombreuses versions du format DXF. Vous entendrez parler de certaines versions clés, comme la R12 (de 1992) ou la R14 (de 1997, qui comportait des splines). Les versions ultérieures du format DXF comportent des éléments 3D mais ceux-ci sont rarement utilisés ou mis en œuvre. La façon dont vous utilisez DXF pour partager des données CAO entre programmes dépend principalement des limitations et des bogues des lecteurs/importateurs et des rédacteurs/exportateurs correspondants. Ceux-ci sont rarement bien documentés et peuvent être une grande source de frustration.

Si vous éditez des fichiers DXF et que vous souhaitez qu'ils restent quasiment identiques lorsque vous les enregistrez, nous vous recommandons d'utiliser [https://fr.wikipedia.org/wiki/LibreCAD LibreCAD] ou [https://fr.wikipedia.org/wiki/QCad QCad] car les structures de données internes de ces programmes sont compatibles avec les objets du fichier DXF.

Dans FreeCAD, les lecteurs DXF doivent traduire la géométrie (par exemple, les formes des splines) du fichier DXF dans les représentations internes spécifiques de l'atelier.

<span id="Methods_for_importing_DXF_to_FreeCAD"></span>
== Méthodes d'importation du fichier DXF dans FreeCAD ==

Si vous avez l’intention de vérifier fréquemment les paramètres, nous vous recommandons d’aller dans Edition → Préférences → Importer-Exporter → DXF et de cocher la case "[ ] Afficher cette boîte de dialogue lors de l’importation et de l’exportation".

Vous trouverez plus d'informations sur les pages [[Draft_DXF/fr|Draft DXF]] et [[FreeCAD_and_DXF_Import/fr|FreeCAD et Importation DXF]].

Si vous utilisez la géométrie importée pour créer des formes 3D dans l'atelier PartDesign, essayez [[Sketcher_ValidateSketch/fr|Sketcher Valider une esquisse]] après avoir importé le fichier DXF dans une esquisse.

<span id="C++_DXF_importer"></span>
=== Importateur DXF en C++ ===

Cette implémentation est rapide, mais elle ignore certaines fonctions qu'elle ne reconnaît pas, comme les splines de DXF. Elle ne peut pas également importer la géométrie dans l'atelier Draft que sous forme d'entrées individuelles dans l'arborescence du modèle. Les couleurs de ces entrées peuvent être lues à partir du fichier si vous cochez cette option. Pour plus d'informations, voir [https://forum.freecadweb.org/viewtopic.php?f=3&t=32493 ce post dans le forum].

<span id="Python_DXF_importer"></span>
=== Importateur DXF en Python ===

Cet importateur doit être téléchargé et installé avant de pouvoir être utilisé. Utilisez l'option "[ ] Autoriser FreeCAD à télécharger et à mettre à jour automatiquement les bibliothèques DXF".

Cet importateur dispose de plus de fonctions (telles que l'implémentation de splines) et a la possibilité de charger les formes DXF dans l'atelier Sketcher. Cependant, il faut savoir que tous les éléments de l'esquisse apparaîtront individuellement une deuxième fois dans l'arborescence du modèle, ce qui peut prêter à confusion. Vous pouvez supprimer tous chacun de ces objets et conserver uniquement l'esquisse (qui apparaît comme deuxième entrée dans la liste des nouveaux éléments).

Malheureusement, l'atelier Sketcher n'implémente pas les couleurs. Toute la géométrie apparaîtra donc au même niveau, ce qui pose problème si le fichier contient de nombreuses lignes de construction. Une solution consiste à ouvrir votre dessin dans LibreCAD et à supprimer toute la géométrie que vous ne souhaitez pas afficher avant d'enregistrer un fichier contenant exactement la géométrie que vous souhaitez charger.

=== Macros ===

Gardez un œil sur le forum de FreeCAD ou sur la [[Macros_recipes/fr|Liste des macros]] pour des implémentations alternatives d'importation et de nettoyage DXF au fur et à mesure de leur développement.

<span id="Saving_DXF"></span>
== Sauvegarder au format DXF ==

Outre les options du menu Edition → Préférences, l'[[TechDraw_Workbench/fr|atelier TechDraw]] peut également exporter des pages de dessin au format DXF à l’aide de la fonction [[TechDraw_ExportPageDXF/fr|TechDraw Exporter au format DXF]].


== DXF terms and definitions ==

=== Anonymous blocks ===

When discussing DXF files, several terms are used to describe blocks that are generated automatically by the CAD software rather than by the user. 

* '''Anonymous block''' (or '''"Asterisk" block'''): This is the technical term defined by the DXF standard. It refers to any block whose name begins with an asterisk ({{Incode|*}}). It is the overarching term.

* '''System block''': This term describes the ''purpose'' of most anonymous blocks. They are not typically created by a user directly. Instead, the CAD application (e.g., AutoCAD) generates them automatically to represent complex objects that are composed of simpler geometric entities, such as hatches and dimensions.

* '''Hidden block''': This term describes the typical ''behavior'' of anonymous blocks within a CAD program's user interface. Because they are system-generated and not meant for direct user manipulation, they are usually hidden from the list of blocks that a user can insert.

Essentially, "anonymous block" is the technical name, "system block" describes its function, and "hidden block" describes its typical user interface behavior. For practical purposes in the context of the FreeCAD DXF importer, they all refer to the same category of blocks.

==== Classes of anonymous blocks ====

Anonymous blocks are further categorized based on the character that follows the initial asterisk. This prefix indicates the block's specific purpose. The most common classes are:

* {{Incode|*D...}} (Dimensions): A block representing the graphical components of a dimension entity (lines, arrowheads, etc.).
* {{Incode|*X...}} (Hatches): A block representing the geometry that makes up a hatch pattern.
* {{Incode|*P...}} (Paper Space Layouts): A block that contains all the entities that exist on a specific paper space layout. The main model is typically in a block named {{Incode|*Model_Space}}, and individual layouts are named {{Incode|*Paper_Space}}, {{Incode|*Paper_Space0}}, {{Incode|*Paper_Space1}}, and so on.
* {{Incode|*U...}} (Dynamic Blocks): These are complex blocks used for AutoCAD's dynamic block functionality.
* {{Incode|*E...}}, {{Incode|*T...}}, etc.: Other prefixes exist for specialized objects like associative arrowheads and tables.

=== BLOCKs and INSERTs ===

==== The BLOCK entity ====

A {{Incode|BLOCK}} is a named collection of geometric entities (lines, arcs, polylines, etc.) that are grouped together to form a single object definition. It can be thought of as a template.

A {{Incode|BLOCK}}:
* '''Has a name:''' every user-created block has a unique name (e.g., "CHAIR-01", "BOLT-M8"). This name is used to reference the block.
* '''Has a base point:''' this is the origin point (0,0,0) within the block's own internal coordinate system. When the block is inserted, this base point is aligned with the specified insertion coordinates.
* '''Is not visible by itself:''' the {{Incode|BLOCK}} definition is stored in a library-like section of the DXF file (the {{Incode|BLOCKS}} section). The geometry within the block does not appear in the final drawing until an instance of it is created.

==== The INSERT entity ====

An {{Incode|INSERT}} entity is what places a copy, or instance, of a {{Incode|BLOCK}}'s geometry into the drawing's model space or paper space. It is a very lightweight entity because it does not contain the geometry itself; it only contains a reference to a {{Incode|BLOCK}} definition and instructions on how to place and transform it.

An {{Incode|INSERT}}:
* '''References a block by name:''' it specifies which {{Incode|BLOCK}} definition to use (e.g., "I am an instance of block 'CHAIR-01'").
* '''Has an insertion point:''' this is the (X, Y, Z) coordinate in the drawing where the block's base point should be placed.
* '''Has transformations:''' each instance can be transformed independently without affecting the original block definition. These transformations include:
** '''Scale:''' the instance can be scaled differently in the X, Y, and Z directions.
** '''Rotation:''' the instance can be rotated around its insertion point.

==== BLOCK placement strategies ====

A DXF file separates the '''definition''' of a component from its '''placement'''.

* A {{Incode|BLOCK}} is the template or blueprint. It contains the geometry that makes up a component, like a chair or a window. These definitions are stored in the {{Incode|BLOCKS}} section of the file and are not directly visible in the final drawing.
* An {{Incode|INSERT}} is the instruction to place a {{Incode|BLOCK}} into the drawing at a specific position, orientation, and scale. These are the visible instances of the block and are found in the {{Incode|ENTITIES}} section.

There are two primary workflows for using blocks and inserts:

# '''Template and instance workflow:''' A single {{Incode|BLOCK}} definition is created, and multiple {{Incode|INSERT}} entities are used to place instances of it throughout the drawing. This is an efficient method for handling repetitive elements. For instance, the geometry for a chair is defined once in a {{Incode|BLOCK}} and then referenced many times by {{Incode|INSERT}} entities.
# '''Compound object workflow:''' A {{Incode|BLOCK}} is created from existing geometry simply to group those objects together as a single, selectable unit. In this case, the {{Incode|BLOCK}} definition is used by a single {{Incode|INSERT}} entity only.

The DXF importer must be able to distinguish between these two use cases to correctly represent the original drawing's intent, either by creating many linked instances to a single base object (template model) or by creating a single, visible object (grouped object model).


{{Userdocnavi{{#translation:}}}}
[[Category:User Documentation{{#translation:}}]]
[[Category:Draft{{#translation:}}]]
[[Category:TechDraw{{#translation:}}]]
[[Category:File_Formats{{#translation:}}]]