<languages/>

{{Docnav/ja
|[[About_FreeCAD/ja|FreeCADとは]]
|[[Installing_on_Windows/ja|Windowsへのインストール]]
}}

以下はFreeCADに実装されている機能の包括的なリストですが、全てを網羅できているわけではありません。

{{TOCright}}

<span id="Release_notes"></span>
== リリースノート ==

* [[Release_notes_1.1/ja|第1.1版]] - ''開発版（毎週更新中）''
* '''[[Release_notes_1.0/ja|第1.0版]] - 2024年11月'''
* [[Release_notes_0.21|第0.21版]] - 2023年8月
* [[Release_notes_0.20|第0.20版]] - 2022年6月
* [[Release_notes_0.19|第0.19版]] - 2021年3月
* [[Release_notes_0.18|第0.18版]] - 2019年3月
* [[Release_notes_0.17|第0.17版]] - 2018年4月
* [[Release_notes_0.16|第0.16版]] - 2016年4月
* [[Release_notes_0.15|第0.15版]] - 2015年3月
* [[Release_notes_0.14|第0.14版]] - 2014年3月
* [[Release_notes_0.13|第0.13版]] - 2013年1月
* [[Release_notes_0.12|第0.12版]] - 2011年12月
* [[Release_notes_0.11|第0.11版]] - 2011年3月

<span id="Key_features"></span>
== 主要な機能 ==

<div class="mw-translate-fuzzy">
* [[Image:Feature1.jpg|left]] 複雑な形状に対する高度な3D操作を可能にする、完全な[https://ja.wikipedia.org/wiki/Open_Cascade_%E3%83%86%E3%82%AF%E3%83%8E%E3%83%AD%E3%82%B8%E3%83%BC]ベースの''ジオメトリカーネルを持ち、以下のような概念を標準でサポートしています。[https://en.wikipedia.org/wiki/Boundary_representation 境界表現]（BREP）、[https://ja.wikipedia.org/wiki/NURBS N非一様有理Bスプライン]（NURBS）曲線と表面、幅広い幾何エンティティ、ブール演算や[https://ja.wikipedia.org/wiki/%E3%83%95%E3%82%A3%E3%83%AC%E3%83%83%E3%83%88_(%E6%A9%9F%E6%A2%B0%E5%B7%A5%E5%AD%A6) フィレット]、[https://ja.wikipedia.org/wiki/ISO_10303 STEP]や[https://ja.wikipedia.org/wiki/IGES IGES]フォーマット。 {{clear}}
* [[Image:Feature3.jpg|left]] 完全にパラメトリックなモデリング。すべてのFreeCADオブジェクトは本質的にパラメトリックです。その形状は[[Property/ja|プロパティー]]または他のオブジェクトによって決まります。すべての変更点は必要に応じて再計算され、変更履歴の管理（アンドゥ／リドゥ）機能に記録されます。新しいオブジェクト・タイプを追加することも容易で、[[Scripted_objects|Pythonプログラム]]でプログラムすることも可能です。{{clear}}
* [[Image:Feature4.jpg|left]] '''モジュール構造'''によって、（モジュールやワークベンチなどの）プラグインを追加して機能の拡張ができます。これら拡張機能は、C++でプログラムされた複雑なものから、簡単な[[Power_users_hub|Pythonスクリプト]]、自分で記録した[[Macros|マイロ]]まで対応可能です。組み込み'''Python'''インタプリター、マクロ、あるいは外部スクリプトを通じて、[[Topological_data_scripting|形状の作成と変形]]、形状の2Dまたは3D[[Scenegraph|表現]]、さらには[[PySide|FreeCADユーザー・インタフェース]]など、FreeCADのほとんど全ての部分にアクセスできます。{{clear}}
* [[Image:Feature5.jpg|left]] FreeCADのネイティブ・フォーマットである{{FileName|[[File Format FCStd|FCStd]]}}に加えて、下記'''標準フォーマット'''をインポート・エクスポートできます： [https://ja.wikipedia.org/wiki/ISO_10303 STEP]、[https://ja.wikipedia.org/wiki/IGES IGES]、[http://en.wikipedia.org/wiki/Obj OBJ]、[https://ja.wikipedia.org/wiki/Standard_Triangulated_Language STL]、[https://ja.wikipedia.org/wiki/DXF DXF]、[https://ja.wikipedia.org/wiki/Scalable_Vector_Graphics SVG]、[https://ja.wikipedia.org/wiki/COLLADA DAE]、[https://ja.wikipedia.org/wiki/Industry_Foundation_Classes IFC]、[http://people.sc.fsu.edu/~jburkardt/data/off/off.html OFF]、[https://ja.wikipedia.org/wiki/Nastran NASTRAN]、[https://ja.wikipedia.org/wiki/VRML VRML]。実装しているワークベンチに依存しているため、各ファイル形式とFreeCADの互換性のレベルはまちまちです。{{clear}}
* [[Image:Feature7.jpg|left]] 拘束ソルバーを組み込んだ[[Sketcher_Workbench/ja|Sketcher]]を使用すると、拘束条件に基づいて2Dの図形を作成できます。Sketcherで作成した2D図形を使って、さらにFreeCADの中で別のオブジェクトを作成することができます。{{clear}}
* [[Image:Feature8.jpg|left]] 詳細図面、断面図、寸法定義などの機能を備えた[[TechDraw_Workbench/ja|技術的製図ワークベンチ]]を使うと、既存の3Dモデルの2D図面を作成できます。作成した2D図面は、そのままSVGやPDFで形式でエクスポート可能です。{{clear}}
* [[Image:Feature-arch.jpg|left]] [[BIM_Workbench|BIMワークベンチ]]を使って、[https://ja.wikipedia.org/wiki/Industry_Foundation_Classes Industry Foundation Classes]（IFC）互換の[https://ja.wikipedia.org/wiki/BIM 建築情報モデリング]（BIM）的なワークフロー管理が可能になります。{{clear}}
* [[Image:Feature-CAM.jpg|left]] [https://ja.wikipedia.org/wiki/CAM コンピュータ支援製造]（CAM）のための、専用の機械加工用の[[CAM_Workbench|CAMワークベンチ]]を提供しています。CAMワークベンチによって、対象となる製造機械を制御するための[http://en.wikipedia.org/wiki/G-code Gコード]を出力、表示、調整できます。{{clear}}
* [[Image:Feature_spreadsheet.png|left]] [[Spreadsheet_Workbench|組み込みスプレッドシート]]と[[Expressions|数式]]を使用して、モデルのデーターを一箇所で集中管理し、数式ベースでモデルを作成することができます。{{clear}}
</div>

<span id="General_features"></span>
== 基本機能 ==

*'''マルチプラットフォーム'''　FreeCADはWindows、Linux、macOS等で完全に同じように動作します。

<div class="mw-translate-fuzzy">
* '''完全なGUIアプリケーション''' FreeCADは完全なグラフィカルユーザーインターフェースを持っています。このグラフィカルユーザーインターフェースは[http://www.qtsoftware.com/ Qt]フレームワークを利用しており、3Dビューワーは[http://en.wikipedia.org/wiki/Open_Inventor Open Inventor]を元に作成されています。これによって高速な3Dシーン描画が可能になり、シーンのグラフィック表現の取り扱いが非常に容易になっています。
</div>

* '''コマンド・ライン・アプリケーション'''　FreeCADはコマンド・ライン・アプリケーションとしても動作します。GUIはありませんが、図形オブジェクトを扱うツールは全て利用可能です。メモリーの消費量が少なくなる他、例えば他のアプリケーション用のデータを作成するためのサーバーとしてFreeCADを使用することも可能になります。

* '''[[Embedding FreeCAD/jp|Pythonモジュール]]としてインポート可能''' FreeCADをPythoモジュールとして他のアプリケーションに組み込み、Pythonスクリプトを実行できます。コマンド・ラインで実行したときと同様にFreeCADのGUIは利用できませんが、図形オブジェクトを扱うツールは全て利用可能です。

* '''ワークベンチ・コンセプト''' FreeCADのユーザー・インターフェイスでは、ツールは[[workbenches|ワークベンチ]]によってグループ分けされます。これによってある作業を行う上で必要なツールだけを表示し、作業スペースを整頓された使いやすい状態に保ち、アプリケーションの読み込みを高速にすることができます。

* '''機能・データー型の遅延読み込みのためのプラグイン・モジュール・フレームワーク'''  FreeCADは核となるアプリケーションと、必要時にのみ読み込まれるモジュールやワークベンチから構成されます。ほとんど全てのツールや図形の型はワークベンチに含まれています。ワークベンチはプラグインとして動作します。必要になった時に読み込まれるだけでなく、個別にFreeCADに追加・削除できます。

* '''パラメーター連動オブジェクト''' FreeCADドキュメント上の全てのオブジェクトは、パラメーターによって定義できます。これらパラメーターは、いつでも変更し再計算可能です。オブジェクトの間の関連性を保持するため、1つのオブジェクトを変更すると、それに依存するオブジェクトにも自動的に変更が反映されます。

* '''パラメトリック・プリミティブ作成''' 立方体、球、円柱などのプリミティブ・オブジェクトは、その形状のパラメターを指定することで作成できます。

* '''グラフィカル修正操作''' FreeCADは、3D空間内の任意の平面上で、平行移動、回転、拡大縮小、鏡像反転、オフセット（簡単なもの、あるいは[https://www.researchgate.net/publication/240754626_Self-intersection_Removal_in_Triangular_Mesh_Offsetting Jung/Shin/Choi]で説明されているもの）、形状変換を行うことができます。

* '''[https://ja.wikipedia.org/wiki/Constructive_Solid_Geometry 空間領域構成法]''' FreeCADは、空間領域構成法のためのブーリアン演算（和集合、差集合、共通集合）を行えます。

* '''グラフィカルな平面図形作成''' 直線、折れ線、四角形、Bスプライン曲線、円弧、楕円弧を、3D空間内の任意の平面上に作成できます。

* '''直線押し出し・回転押し出し・断面・フィレットによるモデリング'''

* '''構成要素''' 例えば'''頂点'''、'''辺'''、'''折れ線'''、'''面'''。

* '''テストと修復''' メッシュのためのツールを用意しています：ソリッド・テスト（面が全て連結して穴がないか）、非多様体テスト（形状が正しく接続され、連続した3D形状として扱えるか）、自己交差テスト、メッシュの修復（穴埋め、メッシュの整合性を確保するためにすべての面の法線ベクトルを外向きに揃える）

* '''注釈''' FreeCADでは、文字列や寸法に注釈を入れることができます。

* '''変更履歴管理（アンドゥ・リドゥ）''' 変更履歴にアクセスすることで、FreeCADでの操作はアンドゥ・リドゥが可能です。一度に複数のステップをアンドゥすることもできます。

* '''トランザクション志向''' 変更履歴は、個別の内部処理ではなく、操作をトランザクションとして保持します。これによって各ツールは何をアンドゥまたはリドゥするかを正確に定義することができます。

* '''組み込み[[Scripting|スクリプト・フレームワーク]]'''  FreeCADは組み込みの[http://www.python.org/ Python]インタプリターを搭載しています。ユーザー・インタフェース、図形、3Dビューアー上の図形表現など、FreeCADのほぼ全てにアクセス可能なAPIを用意しています。インタプリターは単純なコマンドだけでなく、複雑なスクリプトを実行できます。ワークベンチ全体をPythonだけでプログラムすることも可能です。

* '''組み込みPythonコンソール''' Pythonインタプリターには、構文ハイライト、自動補完、クラスブラウザー機能を含むコンソールが備わっています。PythonコマンドをFreeCADに直接入力すると直ちに結果を返します。スクリプト作成者はその場で機能をテストしたり、FreeCADのモジュールやワークベンチの中身を調べたりすることが可能で、FreeCADの内部構造を理解することも容易です。

* '''ユーザー操作のミラーリング''' ユーザーがFreeCADのユーザー・インタフェースで行う操作はPythonコードとして実行され、そのコードはコンソール上に表示されたり、マクロとして記録されます。

* '''完全な[[Macros|マクロ]]記録と編集''' ユーザーの操作はPythonコマンドとして実行されます。後で再実行するために、それを記録、必要に応じて編集した上で、保存しておくことができます。

* '''（ZIPベースの）複合ドキュメント保存フォーマット''' FreeCADドキュメントは、{{FileName|.[[File Format FCStd|FCStd]]}}拡張子付きで保存されます。このフォーマットには、図形、スクリプト、サムネイル・アイコンなど様々な種類の情報を保存できます。{{FileName|.FCStd}}ファイルはzipアーカイブなので、FreeCADのファイルは保存時に既に圧縮されています。

* '''完全にカスタマイズ・スクリプト化可能なグラフィカル・ユーザー・インターフェース'''　[http://www.qtsoftware.com Qt]ベースのFreeCADのユーザー・インターフェイスは、Pythonインタープリターから全てアクセスできます。FreeCAD自体がワークベンチに提供する単純な機能だけではなく、Qtフレームワーク全体にアクセスできます。ユーザーは、ウィジェットやツールバーを作成、追加、ドッキング、変更、削除など、GUIに対してあらゆる操作を行うことができます。

* '''サムネイラー''' (今のところLinuxシステムのみ): GnomeのNautilusを始めとしたほとんどのファイルマネージャーアプリケーションでFreeCAD ドキュメントのアイコン上にファイルの内容を表示します。

* '''モジュール化されたMSIインストーラー''' Windowsへの柔軟なインストールが可能です。Ubuntu用のパッケージも整備されています。

<span id="Extra_Workbenches"></span>
== その他のワークベンチ ==

パワーユーザが作成した様々なカスタム[[External_workbenches/ja|外部ワークベンチ]]があります。。


{{Docnav/ja
|[[About_FreeCAD/ja|FreeCADとは]]
|[[Installing_on_Windows/ja|Windowsへのインストール]]
}}

{{Userdocnavi{{#translation:}}}}
[[Category:User Documentation{{#translation:}}]]