<languages/>
<translate>

<!--T:21-->
{{Docnav
|[[Extra_python_modules|Extra python modules]]
|[[Contributors|Contributors]]
}}

</translate>
{{TOCright}}
<translate>

==Overview== <!--T:1-->

<!--T:40-->
The FreeCAD source code is commented to allow automatic programming documentation generation using [[Doxygen|Doxygen]], a popular source code documentation system. Doxygen can document both the C++ and Python parts of FreeCAD, resulting in HTML pages with hyperlinks to each documented function and class.

<!--T:16-->
The documentation is hosted online at the [https://freecad.github.io/SourceDoc/ FreeCAD API website]. Please note that this documentation may not always be up to date; if you need more details, download FreeCAD's latest source code and compile the documentation yourself. If you have pressing questions about the code please ask in the developer section of the [https://forum.freecad.org/index.php FreeCAD forum].

<!--T:31-->
Compiling the API documentation follows the same general steps as compiling the FreeCAD executable, as indicated in the [[Compile_on_Linux|Compile on Linux]] page.

<!--T:32-->
[[File:FreeCAD_documentation_compilation_workflow.svg|800px]]

<!--T:33-->
{{Caption|General workflow to compile FreeCAD's programming documentation. The Doxygen and Graphviz packages must be in the system, as well as the FreeCAD source code itself. CMake configures the system so that with a single make instruction the documentation for the the entire project is compiled into many HTML files with diagrams.}}

1'''''Wadde fett gmarrickt''[[e]]
[[<ref>File:E|epx|right|alt=e|e</ref>]]
'''

== Other versions == <!--T:8-->

<!--T:41-->
[https://iesensor.com/FreeCADDoc/0.19/ FreeCAD 0.19 development] documentation built by [https://forum.freecad.org/viewtopic.php?t=12613 qingfeng.xia].

== Integrate Coin3D documentation == <!--T:9-->

<!--T:10-->
On Unix systems it is possible to link Coin3D source documentation with FreeCAD's. This allows for easier navigation and complete inheritance diagrams for Coin derived classes.

<!--T:11-->
*Install the {{incode|libcoin-doc}}, {{incode|libcoin80-doc}}, or similarly named package.
*Unpack the archive {{incode|coin.tar.gz}} located in {{incode|/usr/share/doc/libcoin-doc/html}}; the files may be already unpacked in your system.
*Generate again the source documentation.

<!--T:12-->
If you don't install the documentation package for Coin, the links will be generated to access the online documentation at [https://coin3d.bitbucket.io/Coin/ BitBucket]. This will happen if a Doxygen tag file can be downloaded at configure time with {{incode|wget}}.

== Using Doxygen == <!--T:18-->

<!--T:28-->
See the [[Doxygen|Doxygen]] page for an extensive explanation on how to comment C++ and Python source code so that it can be processed by Doxygen to automatically create the documentation.

<!--T:34-->
Essentially, a comment block, starting with {{incode|/**}} or {{incode|///}} for C++, or {{incode|##}} for Python, needs to appear before every class or function definition, so that it is picked up by Doxygen. Many [[Doxygen#Doxygen markup|special commands]], which start with {{incode|\}} or {{incode|@}}, can be used to define parts of the code and format the output. [[Doxygen#Markdown support|Markdown syntax]] is also understood within the comment block, which makes it convenient to emphasize certain parts of the documentation.

</translate>
{{Code|code=
/**
 * Returns the name of the workbench object.
 */
std::string name() const;

/**
 * Set the name to the workbench object.
 */
void setName(const std::string&);

/// remove the added TaskWatcher
void removeTaskWatcher(void);
}}
<translate>


<!--T:13-->
{{Docnav
|[[Extra_python_modules|Extra python modules]]
|[[Contributors|Contributors]]
}}

</translate>
{{Userdocnavi{{#translation:}}}}
[[Category:Developer Documentation{{#translation:}}]]
{{clear}}