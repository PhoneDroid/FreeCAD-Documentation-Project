<languages/>

{{Docnav
|[[Part_JoinEmbed|JoinEmbed]]
|[[Part_BooleanFragments|BooleanFragments]]
|[[Part_Workbench|Part]]
|IconL=Part_JoinEmbed.svg
|IconR=Part_BooleanFragments.svg
|IconC=Workbench_Part.svg
}}

<div class="mw-translate-fuzzy">
{{GuiCommand
|Name=Part JoinCutout
|MenuLocation=Part → Join → Cutout for Object
|Workbenches=[[Part_Workbench|Part]]
|Version=0.16
|SeeAlso=[[Part_JoinConnect|Part JoinConnect]], [[Part_JoinEmbed|Part JoinEmbed]], [[Part_Boolean|Part Boolean]], [[Part_Thickness|Part Thickness]]
}}
</div>

<span id="Description"></span>
<div class="mw-translate-fuzzy">
==Descriere==
Coutout tool creates a cutout in a walled object (e.g., a pipe) to fit another walled object.
</div>

The [[Image:Part_JoinCutout.svg|24px]] '''Part JoinCutout''' tool creates a cutout in a walled object (e.g. a pipe) to fit another walled object.

[[image:JoinFeatures_Cutout.png|600px]]

==Usage== 

<div class="mw-translate-fuzzy">
==How to use==
# Select the base object first, then the object to define the cutout. <br /> The order of selection is important. It is enough to select one sub-shape of each object (e.g., faces).
# Invoke the Part JoinCutout command.
</div>

==Properties== 

{{TitleProperty|Base}}

<div class="mw-translate-fuzzy">
==Properties==
{{TitleProperty|Base}}
* {{PropertyData|Base}}: Reference to base object (the one to make the cutout in). The object should be a single solid.
* {{PropertyData|Tool}}: Reference to tool object (the object that is to fit into the cutout). The object can be a single solid, or a [[Part MakeCompound|valid compound]] of solids.
* {{PropertyData|Mode}}: The mode of operation, equals 'Cutout' (Changing that will transform the tool into another Part_JoinXXX). The value of 'bypass' can be used to temporarily disable the long computations (a compound of Base and Tool will be created, which is a fast operation).
* {{PropertyData|Refine}}: Sets whether to apply [[Part RefineShape|Refine]] operation or not, to the final shape. The default value is determined by a 'Automatically refine shape after boolean operation' checkbox in PartDesign preferences. When Mode property is 'bypass', Refine is ignored (never applied).
</div>

==Example== 

<div class="mw-translate-fuzzy">
==Examplu==
# Create a pipe by applying [[Part_Thickness|thickness]] to a [[Part_Cylinder|cylinder]]: <br />[[image:JoinFeatures_Example_step1.png|320px]]
# Create another, smaller diameter pipe, and [[Placement|place]] it so that it pierces the wall of the first pipe: <br />[[image:JoinFeatures_Example_step2.png|320px]]
# Select the first pipe, then the second pipe (order of selection is important), and click the 'Cutout for object' option from the Join tools dropdown toolbar button. <br />[[image:JoinFeatures_Example_step3_Cutout.png|320px]]
</div>

==Algorithm== 

<div class="mw-translate-fuzzy">
==Algoritm==
Algoritmii din spatele instrumentelor de conectare sunt destul de simple, iar înțelegerea acestora este importantă pentru utilizarea corectă a instrumentelor.
</div>

<div class="mw-translate-fuzzy">
1. Base object is [[Part Cut|boolean-cut]] with Tool object. The resulting shape is a set ([[Part MakeCompound|compound]]) of non-intersecting solids (typically, two).
</div> 

2. The resulting compound is filtered: only the largest solid is kept.

<div class="mw-translate-fuzzy">
3. If Refine property is true, the resulting shape is [[Part RefineShape|refined]].
<br /><br />[[image:JoinFeatures-Algo-Cutout.png|800px]]
</div>

===Notes=== 

<div class="mw-translate-fuzzy">
===Notă===
* Dacă după pasul 1, obiectul rămâne într-o singură bucată, rezultatul Cutout va fi echivalent cu [[Part_Cut|boolean cut]] al Base with Tool.
* Now, the tool will produce unexpected result, if a compound is supplied as Base. This may be changed in the future.
* Because the largest piece is determined by comparing volumes of pieces, the tool can only work with solids. This may be changed in the future.
</div>

<span id="Scripting"></span>
==Programare-Script==

Instrumentul Join poate fi utilizat în [[macros]] și de la consola python utilizând umătoarea funcție:

{{Code|code=JoinFeatures.makePartJoinFeature(name = 'Cutout', mode = 'Cutout')}}
* Creates an empty Cutout feature (or other Join feature, depending on mode passed). The properties Base and Tool must be assigned explicitly, afterwards.
* Returns the newly created object.

Exempluː
{{code|code=
import JoinFeatures
j = JoinFeatures.makePartJoinFeature(name = 'Cutout', mode = 'Cutout' )
j.Base = FreeCADGui.Selection.getSelection()[0]
j.Tool = FreeCADGui.Selection.getSelection()[1]
}}

<div class="mw-translate-fuzzy">
Instrumentul propriu-zis este implementat în Python, vezi /Mod/Part/JoinFeatures.py unde este instalat FreeCAD.
</div>


{{Docnav
|[[Part_JoinEmbed|JoinEmbed]]
|[[Part_BooleanFragments|BooleanFragments]]
|[[Part_Workbench|Part]]
|IconL=Part_JoinEmbed.svg
|IconR=Part_BooleanFragments.svg
|IconC=Workbench_Part.svg
}}

{{Part_Tools_navi{{#translation:}}}}
{{Userdocnavi{{#translation:}}}}