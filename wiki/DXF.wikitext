<languages/>
{{TOCright}}
<translate>

== Background history == <!--T:1-->

<!--T:2-->
The Drawing Exchange Format (DXF) is a proprietary CAD data format developed by Autodesk to enable file exchange between their flagship AutoCAD product and other software. There are a number of good software libraries for reading/writing the DXF format.

<!--T:4-->
There are many versions of the DXF format. You will hear of certain key versions, such as R12 (from 1992) or R14 (from 1997 which had splines). Later versions of DXF have 3D elements, but these are rarely used or implemented. How you use DXF to share CAD data between programs depends mainly on the limitations and bugs in the corresponding readers/importers and writers/exporters. These are rarely fully documented and can be a great source of frustration.

<!--T:5-->
If you are editing DXF files and want them to remain almost the same when you save them, we recommend you use [https://en.wikipedia.org/wiki/LibreCAD LibreCAD] or [https://en.wikipedia.org/wiki/QCad QCad] because these programs' internal data structures are compatible with the objects in the DXF file.

<!--T:6-->
In FreeCAD the DXF readers must translate the geometry (e.g., spline shapes) from the DXF file into the specific internal representations of the Workbench.

== Methods for importing DXF to FreeCAD == <!--T:7-->

<!--T:8-->
If you intend to review the settings frequently, we recommend you go to Edit → Preferences → Import-Export → DXF and tick the box "[ ] Show this dialog when importing and exporting".

<!--T:9-->
More information is on the pages [[Draft_DXF|Draft DXF]] and [[FreeCAD_and_DXF_Import|FreeCAD and DXF Import]].

<!--T:10-->
If you are using the imported geometry to build 3D shapes in the Part Design Workbench, try the [[Sketcher_ValidateSketch|Sketcher Validate]] after you have imported the DXF into a sketch.

=== C++ DXF importer === <!--T:11-->

<!--T:12-->
This implementation of fast, but skips features it doesn't recognize, such as DXF splines. It also can only import geometry into the Draft Workbench as individual entries in the Model tree. These can have the colors read from the file if you tick to enable this option. For further information, see [https://forum.freecadweb.org/viewtopic.php?f=3&t=32493 this forum post].

=== Python DXF importer === <!--T:13-->

<!--T:14-->
This importer has to be downloaded and installed before it can be used. Use the "[ ] Allow FreeCAD to automatically download and update the DXF libraries" option.

<!--T:15-->
This importer has more features (such as implementing splines), and has the option of loading the DXF shapes into the Sketcher Workbench. However, be warned that all the elements of the sketch will appear individually a second time in the model tree, which can be confusing. You can delete all these individual objects and retain the single sketch (which appears as the second entry in the list of new elements).

<!--T:16-->
Unfortunately, the Sketcher Workbench does not implement colors, so all the geometry will appear on the same level, which is a problem if the file contains many construction lines. One work-around is to open your drawing in LibreCAD, and delete all the geometry you don't want to appear before saving a file that contains exactly the geometry that you want to load.

=== Macros === <!--T:17-->

<!--T:18-->
Keep an eye out on the FreeCAD forum or in the [[Macros_recipes|Macros recipes]] for alternative implementations of DXF importing and cleaning up as they develop.

== Saving DXF == <!--T:19-->

<!--T:20-->
In addition to the options under the Edit → Preferences, the [[TechDraw_Workbench|TechDraw Workbench]] can also export drawing pages to DXF using the [[TechDraw_ExportPageDXF|TechDraw ExportPageDXF]] function.


== DXF terms and definitions ==

=== Anonymous blocks ===

When discussing DXF files, several terms are used to describe blocks that are generated automatically by the CAD software rather than by the user. 

* '''Anonymous block''' (or '''"Asterisk" block'''): This is the technical term defined by the DXF standard. It refers to any block whose name begins with an asterisk ({{Incode|*}}). It is the overarching term.

* '''System block''': This term describes the ''purpose'' of most anonymous blocks. They are not typically created by a user directly. Instead, the CAD application (e.g., AutoCAD) generates them automatically to represent complex objects that are composed of simpler geometric entities, such as hatches and dimensions.

* '''Hidden block''': This term describes the typical ''behavior'' of anonymous blocks within a CAD program's user interface. Because they are system-generated and not meant for direct user manipulation, they are usually hidden from the list of blocks that a user can insert.

Essentially, "anonymous block" is the technical name, "system block" describes its function, and "hidden block" describes its typical user interface behavior. For practical purposes in the context of the FreeCAD DXF importer, they all refer to the same category of blocks.

==== Classes of anonymous blocks ====

Anonymous blocks are further categorized based on the character that follows the initial asterisk. This prefix indicates the block's specific purpose. The most common classes are:

* {{Incode|*D...}} (Dimensions): A block representing the graphical components of a dimension entity (lines, arrowheads, etc.).
* {{Incode|*X...}} (Hatches): A block representing the geometry that makes up a hatch pattern.
* {{Incode|*P...}} (Paper Space Layouts): A block that contains all the entities that exist on a specific paper space layout. The main model is typically in a block named <code>*Model_Space}}, and individual layouts are named {{Incode|*Paper_Space</code>, {{Incode|*Paper_Space0}}, {{Incode|*Paper_Space1}}, and so on.
* {{Incode|*U...}} (Dynamic Blocks): These are complex blocks used for AutoCAD's dynamic block functionality.
* {{Incode|*E...}}, {{Incode|*T...}}, etc.: Other prefixes exist for specialized objects like associative arrowheads and tables.

=== BLOCKs and INSERTs ===

==== The BLOCK entity ====

A {{Incode|BLOCK}} is a named collection of geometric entities (lines, arcs, polylines, etc.) that are grouped together to form a single object definition. It can be thought of as a template.

A {{Incode|BLOCK}}:

* '''Has a name:''' every user-created block has a unique name (e.g., "CHAIR-01", "BOLT-M8"). This name is used to reference the block.
* '''Has a base point:''' this is the origin point (0,0,0) within the block's own internal coordinate system. When the block is inserted, this base point is aligned with the specified insertion coordinates.
* '''Is not visible by itself:''' the {{Incode|BLOCK}} definition is stored in a library-like section of the DXF file (the {{Incode|BLOCKS}} section). The geometry within the block does not appear in the final drawing until an instance of it is created.

==== The INSERT entity ====

An {{Incode|INSERT}} entity is what places a copy, or instance, of a {{Incode|BLOCK}}'s geometry into the drawing's model space or paper space. It is a very lightweight entity because it does not contain the geometry itself; it only contains a reference to a {{Incode|BLOCK}} definition and instructions on how to place and transform it.

An {{Incode|INSERT}}:
* '''References a block by name:''' it specifies which {{Incode|BLOCK}} definition to use (e.g., "I am an instance of block 'CHAIR-01'").
* '''Has an insertion point:''' this is the (X, Y, Z) coordinate in the drawing where the block's base point should be placed.
* '''Has transformations:''' each instance can be transformed independently without affecting the original block definition. These transformations include:
** '''Scale:''' the instance can be scaled differently in the X, Y, and Z directions.
** '''Rotation:''' the instance can be rotated around its insertion point.

</translate>
{{Userdocnavi{{#translation:}}}}
[[Category:User Documentation{{#translation:}}]]
[[Category:Draft{{#translation:}}]]
[[Category:TechDraw{{#translation:}}]]
[[Category:File_Formats{{#translation:}}]]